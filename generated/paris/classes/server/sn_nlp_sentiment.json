[
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var sa = new sn_nlp_sentiment.SentimentAnalyser();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "SA-SentimentAnalyser",
        "hasExample": true,
        "name": "SentimentAnalyser()",
        "order": 2430,
        "parentId": "SentimentAnalyserScoped",
        "parent_permalink": "class_namespace__scoped_sentimentanalyser_sn_nlp_sentiment__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Creates an instance of the SentimentAnalyser class with the default connector\n    configuration that is used for sentiment analysis.",
        "text2": null,
        "type": "Constructor",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var sa = new sn_nlp_sentiment.SentimentAnalyser(configGR);</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "configGR",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "GlideRecord",
            "text2": "GlideRecord object of a connector configuration",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "SA-SentimentAnalyser_G",
        "hasExample": true,
        "hasParameter": true,
        "name": "SentimentAnalyser(GlideRecord configGR)",
        "order": 2440,
        "parentId": "SentimentAnalyserScoped",
        "parent_permalink": "class_namespace__scoped_sentimentanalyser_sn_nlp_sentiment__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Creates an instance of the SentimentAnalyser class with the specified connector\n    configuration that is used for sentiment analysis.",
        "text2": null,
        "type": "Constructor",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "{&quot;status&quot;: &quot;Success&quot;, &quot;score&quot;: &quot;0.7&quot;, &quot;normalizedScore&quot;: &quot;0.7&quot;, &quot;connectorConfig&quot;: &quot;10932aa773101300734e234ffff6a777&quot;, &quot;errorMessage&quot;:&quot;&quot;}",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n        var sa = new sn_nlp_sentiment.SentimentAnalyser();\n        var result = sa.analyze (\"Example string\");</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSON object",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Result of the sentiment analysis specifying the status, score, normalised\n                score, sys_id of the relevant connector configuration, and error message.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputText",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Text on which sentiment analysis should be performed.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "SA-analyze_S",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "analyze(String inputText)",
        "order": 3440,
        "parentId": "SentimentAnalyserScoped",
        "parent_permalink": "class_namespace__scoped_sentimentanalyser_sn_nlp_sentiment__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Performs sentiment analysis on the specified text.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputTextArray",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Array",
            "text2": "Array of text (string) on which sentiment analysis should be performed.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "[{&quot;text&quot;: &quot;I am happy&quot;,&quot;result&quot;: {Success&quot;, &quot;score&quot;: &quot;0.7&quot;, &quot;normalizedScore&quot;: &quot;0.7&quot;, &quot;connectorConfig&quot;: &quot;10932aa773101300734e234ffff6a777&quot;, &quot;errorMessage&quot;:&quot;&quot;}},{&quot;text&quot;: &quot;I am not happy&quot;,&quot;result&quot;: {Success&quot;, &quot;score&quot;: &quot;-0.7&quot;, &quot;normalizedScore&quot;: &quot;-0.7&quot;, &quot;connectorConfig&quot;: &quot;10932aa773101300734e234ffff6a777&quot;, &quot;errorMessage&quot;:&quot;&quot;}}]",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n        var sa = new sn_nlp_sentiment.SentimentAnalyser();\n        var result = sa.analyzeMultiple ([\"Example string1\",\"Example string2\"]);</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSON Array",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "An array that gives the result of the sentiment analysis performed on multiple\n                texts specifying the status, score, normalized score, sys_id of the relevant\n                connector configuration, and error message.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "SA-analyzeMultiple_A",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "analyzeMultiple(Array inputTextArray)",
        "order": 3450,
        "parentId": "SentimentAnalyserScoped",
        "parent_permalink": "class_namespace__scoped_sentimentanalyser_sn_nlp_sentiment__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Performs sentiment analysis on an array of strings.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "[{&quot;text&quot;: &quot;I am happy&quot;,&quot;result&quot;: {Success&quot;, &quot;score&quot;: &quot;0.7&quot;, &quot;normalizedScore&quot;: &quot;0.7&quot;, &quot;connectorConfig&quot;: &quot;10932aa773101300734e234ffff6a777&quot;, &quot;errorMessage&quot;:&quot;&quot;}},{&quot;text&quot;: &quot;I am not happy&quot;,&quot;result&quot;: {Success&quot;, &quot;score&quot;: &quot;-0.7&quot;, &quot;normalizedScore&quot;: &quot;-0.7&quot;, &quot;connectorConfig&quot;: &quot;10932aa773101300734e234ffff6a777&quot;, &quot;errorMessage&quot;:&quot;&quot;}}]",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n        var sa = new sn_nlp_sentiment.SentimentAnalyser();\n        var result = sa.analyzeMultipleWithLanguage ([\"Example string1\",\"Example string2\"], \"en\");</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSON Array",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "An array with the result of the sentiment analysis performed on multiple texts\n                of the mentioned language, specifying the status, score, normalized score, sys_id of\n                the relevant connector configuration, and error message.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputTextArray",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Array",
            "text2": "Array of text (string) on which sentiment analysis should be performed.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "language",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Language for the input text. This can very for different sentiment\n                services.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "SA-analyzeMultipleWithLanguage_A_S",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "analyzeMultipleWithLanguage(Array inputTextArray, String language)",
        "order": 3460,
        "parentId": "SentimentAnalyserScoped",
        "parent_permalink": "class_namespace__scoped_sentimentanalyser_sn_nlp_sentiment__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Performs sentiment analysis on an array of strings in the specified\n    language.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSON object",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Result of the sentiment analysis specifying the status, score, normalized\n                score, sys_id of the relevant connector configuration, and error message.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "{&quot;status&quot;: &quot;Success&quot;, &quot;score&quot;: &quot;0.7&quot;, &quot;normalizedScore&quot;: &quot;0.7&quot;, &quot;connectorConfig&quot;: &quot;10932aa773101300734e234ffff6a777&quot;, errorMessage&quot;:&quot;&quot;}",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n        var sa = new sn_nlp_sentiment.SentimentAnalyser();\n        var result = sa.analyze (\"Example string\", \"en\");</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputText",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Text on which sentiment analysis should be performed.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "language",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Language for the input text. This can very for different sentiment\n                services.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "SA-analyzeWithLanguag_S_S",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "analyzeWithLanguage(String inputText, String language)",
        "order": 3470,
        "parentId": "SentimentAnalyserScoped",
        "parent_permalink": "class_namespace__scoped_sentimentanalyser_sn_nlp_sentiment__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Performs sentiment analysis on a specified text and language.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "GlideRecord object",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "GlideRecord of the specified connector configuration.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "connectorName",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Name of the connector configuration.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "GlideRecord object of the connector configuration with name &quot;xxx&quot;, null if no connector is named as &quot;xxx&quot;.",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n      var sa = new sn_nlp_sentiment.SentimentAnalyser();\n      var connector = sa.getConnectorByName(\"xxx\");</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "SA-getConnectorByName_S",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "getConnectorByName(String connectorName)",
        "order": 6170,
        "parentId": "SentimentAnalyserScoped",
        "parent_permalink": "class_namespace__scoped_sentimentanalyser_sn_nlp_sentiment__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the GlideRecord of the specified connector configuration.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "GlideRecord object of the default connector configuration, null if no default connector is defined.",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n        var sa = new sn_nlp_sentiment.SentimentAnalyser();\n        var defaultConnector = sa.getDefaultConnector();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "GlideRecord object",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "GlideRecord of the default connector configuration.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "SA-getDefaultConnector",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getDefaultConnector()",
        "order": 6650,
        "parentId": "SentimentAnalyserScoped",
        "parent_permalink": "class_namespace__scoped_sentimentanalyser_sn_nlp_sentiment__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the GlideRecord of the default connector configuration.",
        "text2": null,
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "SentimentAnalyserScoped",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "SentimentAnalyser",
    "namespace_id": "sn_nlp_sentiment-namespace",
    "release": "paris",
    "text": "The\n    <span class=\"keyword apiname\">SentimentAnalyser</span> API performs sentiment analysis on a\n    string value.",
    "text2": "The <span class=\"keyword apiname\">Sentiment Analysis</span> API should be used in a script that is treated as\n      an admin-executing script. For example, we should use the <span class=\"keyword apiname\">Sentiment\n        Analysis</span> API in Script Action or Scheduled Job.<br/><br/>To use this class in a scoped application, use the <span class=\"keyword parmname\">sn_nlp_sentiment</span>\n      namespace identifier. The Sentiment Analysis plugin ( com.snc.sentiment_analysis) must be\n      enabled to access the <span class=\"keyword apiname\">SentimentAnalyser</span> API.",
    "type": "Server Side Scoped",
    "variable": ""
  }
]