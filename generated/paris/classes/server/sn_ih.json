[
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-close",
        "hasExample": true,
        "hasReturn": true,
        "name": "close()",
        "order": 4010,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "<span class=\"ph\">Closes the JSONStreamingAPI\n                              object.</span> Must call this method to close\n    the stream after building a JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "{&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;age&quot;:25,\n&quot;address&quot; : {\n  &quot;streetAddress&quot; : &quot;21 2nd Street&quot;,\n  &quot;city&quot; : &quot;Santa Clara&quot;,\n  &quot;state&quot; : &quot;CA&quot;,\n  &quot;postalCode&quot; : &quot;11111&quot;\n},&quot;phoneNumber&quot;:[{&quot;type&quot;:&quot;home&quot;,&quot;number&quot;:&quot;212 555-1234&quot;},{&quot;type&quot;:&quot;fax&quot;,&quot;number&quot;:&quot;646 555-4567&quot;}]}",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")  \n    .writeNumberField(\"age\",\"25\")\n    .enablePrettyPrint()\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .disablePrettyPrint()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()\n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  adds pretty print formatting to the <code class=\"ph codeph\">address</code> object.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-disablePrettyPrint",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "disablePrettyPrint()",
        "order": 4610,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Ends pretty print JSON formatting.",
        "text2": "<p>Before calling this method, you must first call <span class=\"keyword apiname\">enablePrettyPrint()</span> to\n        add JSON formatting to a specific section.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "{\n&quot;firstName&quot; : &quot;John&quot;,\n&quot;lastName&quot; : &quot;Smith&quot;,\n&quot;age&quot; : 25,\n&quot;address&quot; : {\n  &quot;streetAddress&quot; : &quot;21 2nd Street&quot;,\n  &quot;city&quot; : &quot;Santa Clara&quot;,\n  &quot;state&quot; : &quot;CA&quot;,\n  &quot;postalCode&quot; : &quot;11111&quot;\n},\n&quot;phoneNumber&quot; : [ {\n  &quot;type&quot; : &quot;home&quot;,\n  &quot;number&quot; : &quot;212 555-1234&quot;\n}, {\n  &quot;type&quot; : &quot;fax&quot;,\n  &quot;number&quot; : &quot;646 555-4567&quot;\n} ]\n}",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.enablePrettyPrint()\n    .startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()\n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-enablePrettyPrint",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "enablePrettyPrint()",
        "order": 4720,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds pretty print formatting to a JSON object, or a section of a JSON object.",
        "text2": "<p>To disable pretty print formatting in a JSON object section, use the\n          <span class=\"keyword apiname\">disablePrettyPrint()</span> method.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-endArray",
        "hasExample": true,
        "hasReturn": true,
        "name": "endArray()",
        "order": 4740,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Closes an array within the parent JSON object.",
        "text2": "<p>Call the <span class=\"keyword apiname\">startArray()</span> method first to open the array.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-endObject",
        "hasExample": true,
        "hasReturn": true,
        "name": "endObject()",
        "order": 4770,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Closes an object within the parent JSON object.",
        "text2": "<p>Call the <span class=\"keyword apiname\">startObject()</span> method first to open the object.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Sys_id of the attachment record in the Streaming Attachments\n                [streaming_attachment] table that contains the JSON payload.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-getAttachmentId",
        "hasExample": true,
        "hasReturn": true,
        "name": "getAttachmentId()",
        "order": 5630,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the sys_id of the attachment record in the Streaming Attachments\n    [streaming_attachment] table that contains the JSON payload.",
        "text2": "<p>You must call the <span class=\"keyword apiname\">withAttachment()</span> method in the\n          <span class=\"keyword apiname\">JSONStreamingBuilder</span> class to save the JSON payload as an attachment\n        before calling this method. See <a class=\"xref\" href=\"dev.do#!/reference/api/paris/server/sn_ih-namespace/JSONStreamingBuilderScopedAPI\" title=\"Create a builder object used to build a large streaming JSON payload to use in a REST or SOAP request to send bulk data to a third-party API. You can also create the payload as a JSON string for a non-streaming option.\">JSONStreamingBuilder</a>.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Contains the JSON object built using the\n                <span class=\"keyword apiname\">JSONStreamingAPI</span>.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "{\n&quot;firstName&quot; : &quot;John&quot;,\n&quot;lastName&quot; : &quot;Smith&quot;,\n&quot;age&quot; : 25,\n&quot;address&quot; : {\n  &quot;streetAddress&quot; : &quot;21 2nd Street&quot;,\n  &quot;city&quot; : &quot;Santa Clara&quot;,\n  &quot;state&quot; : &quot;CA&quot;,\n  &quot;postalCode&quot; : &quot;11111&quot;\n},\n&quot;phoneNumber&quot; : [ {\n  &quot;type&quot; : &quot;home&quot;,\n  &quot;number&quot; : &quot;212 555-1234&quot;\n}, {\n  &quot;type&quot; : &quot;fax&quot;,\n  &quot;number&quot; : &quot;646 555-4567&quot;\n} ]\n}",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()\n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-getJSONString",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getJSONString()",
        "order": 7890,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the JSON object as a string.",
        "text2": "<p>To return the JSON object as a string, do not call the <span class=\"keyword apiname\">withAttachment()</span>\n        method in the <span class=\"keyword apiname\">JSONStreamingBuilder</span> class. See <a class=\"xref\" href=\"dev.do#!/reference/api/paris/server/sn_ih-namespace/JSONStreamingBuilderScopedAPI\" title=\"Create a builder object used to build a large streaming JSON payload to use in a REST or SOAP request to send bulk data to a third-party API. You can also create the payload as a JSON string for a non-streaming option.\">JSONStreamingBuilder</a>.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-startArray",
        "hasExample": true,
        "hasReturn": true,
        "name": "startArray()",
        "order": 14590,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Opens an array within the parent JSON object.",
        "text2": "<p>Include the <span class=\"keyword apiname\">endArray()</span> method to close the array.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .startArrayField(\"phoneNumber\")\n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()\n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "fieldName",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The name of the array.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-startArrayField_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startArrayField(String fieldName)",
        "order": 14600,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Creates an array within the parent JSON object.",
        "text2": "<p>Surround this method with the <span class=\"keyword apiname\">startArray()</span> and\n          <span class=\"keyword apiname\">endArray()</span> methods to open and close the array.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-startObject",
        "hasExample": true,
        "hasReturn": true,
        "name": "startObject()",
        "order": 14670,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Opens an object within the parent JSON object.",
        "text2": "<p>Requires the <span class=\"keyword apiname\">endObject()</span> method to close the object.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeFieldName(\"activeUser\")\n    .writeBoolean(true)\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()\n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "state",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Boolean",
            "text2": "The boolean value to add to the parent JSON object.<div class=\"p\">Valid values:<ul class=\"ul\" id=\"JSA-writeBoolean_B__ul_js4_hzs_1mb\">\n                    <li class=\"li\">true</li>\n\n                    <li class=\"li\">false</li>\n\n                  </ul>\n</div>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-writeBoolean_B",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeBoolean(Boolean state)",
        "order": 15720,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a Boolean value to the parent JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "fieldName",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The name of the field to add to the parent JSON object.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeBooleanField(\"activeUser\", true)\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")  \n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()\n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "value",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Boolean",
            "text2": "The boolean value to add to the parent JSON object.<div class=\"p\">Valid values:<ul class=\"ul\" id=\"JSA-writeBooleanField_S_B__ul_js4_hzs_1mb\">\n                    <li class=\"li\">true</li>\n\n                    <li class=\"li\">false</li>\n\n                  </ul>\n</div>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-writeBooleanField_S_B",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeBooleanField(String fieldName, Boolean value)",
        "order": 15730,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a Boolean field and value to the parent JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Field name to add to the parent JSON object.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-writeFieldName_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeFieldName(String name)",
        "order": 15800,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a field name to the parent JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeFieldName(\"activeUser\")\n    .writeNull()\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()\n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-writeNull",
        "hasExample": true,
        "hasReturn": true,
        "name": "writeNull()",
        "order": 15840,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a null value to the parent JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeNullField(\"activeUser\")\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()  \n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "fieldName",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The name of the null field.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-writeNullField_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeNullField(String fieldName)",
        "order": 15850,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a field with a null value to the parent JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "fieldName",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The name of the number field.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "encodedValue",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The value of the number field.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-writeNumberField_S_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeNumberField(String fieldName, String encodedValue)",
        "order": 15860,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a number field and value to the parent JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeFieldName(\"filePath\")\n    .writeRaw(\"C:\\Users\\profile\\aboutme.html\")\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()\n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "text",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Raw text to add to the parent JSON object.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-writeRaw_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeRaw(String text)",
        "order": 15890,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a raw value to the parent JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "text",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The string value to add to the parent JSON object.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-writeString_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeString(String text)",
        "order": 15920,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a string value to the parent JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "fieldName",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The name of the field to add to the parent JSON object.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "value",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The value of the field.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "JSA-writeStringField_S_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeStringField(String fieldName, String value)",
        "order": 15930,
        "parentId": "JSONStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a string field and value to the parent JSON object.",
        "text2": null,
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "JSONStreamingAPIScopedAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "JSONStreamingAPI",
    "namespace_id": "sn_ih-namespace",
    "release": "paris",
    "text": "<span class=\"ph\">Build a large streaming JSON payload to use in a\n                REST or SOAP request to send bulk data to a third-party API. You can also create the\n                payload as a JSON string for a non-streaming option.</span>",
    "text2": "<p class=\"p\"><span class=\"ph\">Use these methods in the <span class=\"ph\">Flow Designer</span> script step with the <span class=\"keyword parmname\">sn_ih</span> namespace\n                identifier. For example, you can use this API to create a JSON payload in the <span class=\"ph\">Flow Designer</span> Script step and pass the returned value to the REST step\n                to send the request to a third-party service. For more information, see the <span class=\"ph\">Flow Designer</span>\n                <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/paris-servicenow-platform/page/administer/flow-designer/reference/javascript-step-action-designer.html\" target=\"_blank\">Script\n              step</a>.</span></p>\n\n      <p class=\"p\"><span class=\"ph\">You can only use this API within the <span class=\"ph\">Flow Designer</span> environment.</span></p>\n\n      <p class=\"p\">To use this class, you must call the <span class=\"keyword apiname\">build()</span> method in the\n          <span class=\"keyword apiname\">JSONStreamingBuilder</span> class to return a JSONStreamingAPI object. See\n          <a class=\"xref\" href=\"dev.do#!/reference/api/paris/server/sn_ih-namespace/JSONStreamingBuilderScopedAPI\" title=\"Create a builder object used to build a large streaming JSON payload to use in a REST or SOAP request to send bulk data to a third-party API. You can also create the payload as a JSON string for a non-streaming option.\">JSONStreamingBuilder</a>.</p><br/><br/><h2 class=\"title sectiontitle\">API call order</h2>\n      \n      <p class=\"p\">Generate JSON payloads using these APIs in the following order:</p>\n\n      <div class=\"p\">\n                <dl class=\"dl\">\n                  \n                    <dt class=\"dt dlterm\"><span class=\"keyword apiname\">JSONStreamingBuilder</span>: Creates a builder object</dt>\n\n                    <dd class=\"dd\">Use these methods in the following order to create a builder object:<div class=\"p\">\n                        <ol class=\"ol\" id=\"JSONStreamingAPIScopedAPI__d217e220\">\n                          <li class=\"li\"><span class=\"keyword apiname\">JSONStreamingBuilder()</span>: <span class=\"ph\" id=\"JSONStreamingAPIScopedAPI__d217e226\">Instantiates the JSONStreamingBuilder\n                              object.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">withAttachment()</span>: Optional. <span class=\"ph\" id=\"JSONStreamingAPIScopedAPI__d217e233\">Creates the JSON object as a streaming\n                              attachment and stores it in the Streaming Attachments\n                              [streaming_attachment] table. If you do not call this method, the API\n                              creates the payload as a JSON string.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">expiresAt()</span>: Optional. <span class=\"ph\" id=\"JSONStreamingAPIScopedAPI__d217e240\">Sets a\n                              time when the attachment expires. Must also call the\n                                <span class=\"keyword apiname\">withAttachment()</span> method.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">build()</span>: <span class=\"ph\" id=\"JSONStreamingAPIScopedAPI__d217e250\">Returns a JSONStreamingAPI\n                              object.</span></li>\n\n                        </ol>\n\n                      </div>\n</dd>\n\n                  \n                  \n                    <dt class=\"dt dlterm\"><span class=\"keyword apiname\">JSONStreamingAPI</span>: Builds the JSON payload</dt>\n\n                    <dd class=\"dd\">Use these methods in the following order to create the JSON payload:<div class=\"p\">\n                        <ol class=\"ol\" id=\"JSONStreamingAPIScopedAPI__d217e267\">\n                          <li class=\"li\"><span class=\"keyword apiname\">startObject()</span>: <span class=\"ph\" id=\"JSONStreamingAPIScopedAPI__d217e273\">Creates the\n                              parent JSON object.</span></li>\n\n                          <li class=\"li\">Methods to generate the JSON key-value pairs, such as\n                              <span class=\"keyword apiname\">writeFieldName()</span>, <span class=\"keyword apiname\">writeString()</span>,\n                            and <span class=\"keyword apiname\">writeNumberField()</span>.</li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">endObject()</span>: <span class=\"ph\" id=\"JSONStreamingAPIScopedAPI__d217e292\">Closes the parent\n                              JSON object.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">getJSONString()</span> or\n                              <span class=\"keyword apiname\">getAttachmentId()</span>: Returns the JSON string or\n                            attachment ID that you created. </li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">close()</span>: <span class=\"ph\" id=\"JSONStreamingAPIScopedAPI__d217e307\">Closes the JSONStreamingAPI\n                              object.</span></li>\n\n                        </ol>\n\n                      </div>\n</dd>\n\n                  \n                </dl>\n\n              </div><br/><br/><h2 class=\"title sectiontitle\">Size limits</h2>\n      \n      <p class=\"p\">Payloads generated through this API cannot exceed these size limits:</p>\n\n      <div class=\"p\">\n        <ul class=\"ul\" id=\"JSONStreamingAPIScopedAPI__ul_syy_lsw_3lb\">\n                <li class=\"li\">Attachments: 200 MB</li>\n\n                <li class=\"li\">Strings: 5 MB</li>\n\n              </ul>\n\n      </div><br/><br/><h2 class=\"title sectiontitle\">Example</h2>\n      \n      <p class=\"p\">This example create a JSON object and stores it in the Attachment [sys_attachment] table\n        with a defined expiration date. You can use this option to create payloads under 5 MB.</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code></code></pre>\n      </div>\n\n      <p class=\"p\">Alternatively, this example uses the API in the Script step and creates the payload as a\n        JSON string. You can use this option to create payloads under 5 MB.</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>(function execute(inputs, outputs) {\n\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n  \n  builder.startObject()\n    .enablePrettyPrint()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n      .writeStringField(\"streetAddress\", \"21 2nd Street\")\n      .writeStringField(\"city\", \"Santa Clara\")\n      .writeStringField(\"state\", \"CA\")\n      .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n      .startObject()\n        .writeFieldName(\"type\")\n        .writeString(\"home\")\n        .writeFieldName(\"number\")\n        .writeString(\"212 555-1234\")\n      .endObject()\n      .startObject()\n        .writeFieldName(\"type\")\n        .writeString(\"fax\")\n        .writeFieldName(\"number\")\n        .writeString(\"646 555-4567\")\n      .endObject()\n    .endArray()\n    .endObject()\n\n  outputs.payload = builder.getJSONString();\n  \n})(inputs, outputs);</code></code></pre>\n      </div>\n\n      <p class=\"p\">Output:</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>{\n\"firstName\" : \"John\",\n\"lastName\" : \"Smith\",\n\"age\" : 25,\n\"address\" : {\n  \"streetAddress\" : \"21 2nd Street\",\n  \"city\" : \"Santa Clara\",\n  \"state\" : \"CA\",\n  \"postalCode\" : \"11111\"\n},\n\"phoneNumber\" : [ {\n  \"type\" : \"home\",\n  \"number\" : \"212 555-1234\"\n}, {\n  \"type\" : \"fax\",\n  \"number\" : \"646 555-4567\"\n} ]\n}</code></code></pre>\n      </div>",
    "type": "Server Side Scoped",
    "variable": ""
  },
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var builder = new sn_ih.JSONStreamingBuilder()</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "JSB-JSONStreamingBuilder",
        "hasExample": true,
        "name": "JSONStreamingBuilder()",
        "order": 2360,
        "parentId": "JSONStreamingBuilderScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingbuilder_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "<span class=\"ph\">Instantiates the JSONStreamingBuilder\n                              object.</span>",
        "text2": null,
        "type": "Constructor",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/paris/server/sn_ih-namespace/JSONStreamingAPIScopedAPI\" title=\"Build a large streaming JSON payload to use in a REST or SOAP request to send bulk data to a third-party API. You can also create the payload as a JSON string for a non-streaming option.\">JSONStreamingAPI</a>",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming JSON object used to construct the\n              payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSB-build",
        "hasExample": true,
        "hasReturn": true,
        "name": "build()",
        "order": 3710,
        "parentId": "JSONStreamingBuilderScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingbuilder_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "<span class=\"ph\">Returns a JSONStreamingAPI\n                              object.</span>",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "expiresAt",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "<a class=\"xref\" href=\"dev.do#!/reference/api/paris/server/no-namespace/c_APIRef\" title=\"The scoped GlideDateTime class provides methods for performing operations on GlideDateTime objects, such as instantiating GlideDateTime objects or working with glide_date_time fields.\">GlideDateTime</a>",
            "text2": "Object that is set when the attachment expires. <div class=\"p\">\n                  <ul class=\"ul\" id=\"JSB-expiresAt_O__ul_xsc_trx_3lb\">\n                    <li class=\"li\">Minimum value: 7200 seconds, or two hours, from the time the attachment is\n                      created. Default.</li>\n\n                    <li class=\"li\">Maximum value: 172800 seconds, or 48 hours, from the time the attachment is\n                      created.</li>\n\n                  </ul>\n\n                </div>",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingBuilder",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to initiate the JSON payload.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "JSB-expiresAt_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "expiresAt(Object expiresAt)",
        "order": 5190,
        "parentId": "JSONStreamingBuilderScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingbuilder_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "<span class=\"ph\">Sets a\n                              time when the attachment expires. Must also call the\n                                <span class=\"keyword apiname\">withAttachment()</span> method.</span> If you do not call this\n    method, the attachment expires two hours from the time the attachment is created.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "JSONStreamingBuilder",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to initiate the JSON payload.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to build the JSON payload and save it as an attachment.",
            "type": "Example",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "paris",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "{\n&quot;firstName&quot; : &quot;John&quot;,\n&quot;lastName&quot; : &quot;Smith&quot;,\n&quot;age&quot; : 25,\n&quot;address&quot; : {\n  &quot;streetAddress&quot; : &quot;21 2nd Street&quot;,\n  &quot;city&quot; : &quot;Santa Clara&quot;,\n  &quot;state&quot; : &quot;CA&quot;,\n  &quot;postalCode&quot; : &quot;11111&quot;\n},\n&quot;phoneNumber&quot; : [ {\n  &quot;type&quot; : &quot;home&quot;,\n  &quot;number&quot; : &quot;212 555-1234&quot;\n}, {\n  &quot;type&quot; : &quot;fax&quot;,\n  &quot;number&quot; : &quot;646 555-4567&quot;\n} ]\n}",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 20,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n\n  builder.startObject()\n    .writeFieldName(\"firstName\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n    .writeStringField(\"streetAddress\", \"21 2nd Street\")\n    .writeStringField(\"city\", \"Santa Clara\")\n    .writeStringField(\"state\", \"CA\")\n    .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"home\")\n    .writeFieldName(\"number\")\n    .writeString(\"212 555-1234\")\n    .endObject()\n    .startObject()\n    .writeFieldName(\"type\")\n    .writeString(\"fax\")\n    .writeFieldName(\"number\")\n    .writeString(\"646 555-4567\")\n    .endObject()\n    .endArray()\n    .endObject()\n\n  gs.log(builder.getJSONString());\n} \n\ncatch (err) {\n  gs.log(\"Exception: \" + err);\n} \n\nfinally {\n  builder.close();\n}</code>",
            "text2": "This  shows how to build the JSON payload and save it as a string.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "JSB-withAttachment",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "withAttachment()",
        "order": 15640,
        "parentId": "JSONStreamingBuilderScopedAPI",
        "parent_permalink": "class_namespace__scoped_jsonstreamingbuilder_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "<span class=\"ph\">Creates the JSON object as a streaming\n                              attachment and stores it in the Streaming Attachments\n                              [streaming_attachment] table. If you do not call this method, the API\n                              creates the payload as a JSON string.</span>",
        "text2": null,
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "JSONStreamingBuilderScopedAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "JSONStreamingBuilder",
    "namespace_id": "sn_ih-namespace",
    "release": "paris",
    "text": "<span class=\"ph\">Create a builder object used to build a large\n                streaming JSON payload to use in a REST or SOAP request to send bulk data to a\n                third-party API. You can also create the payload as a JSON string for a\n                non-streaming option.</span>",
    "text2": "<p class=\"p\"><span class=\"ph\">Use these methods in the <span class=\"ph\">Flow Designer</span> script step with the <span class=\"keyword parmname\">sn_ih</span> namespace\n                identifier. For example, you can use this API to create a JSON payload in the <span class=\"ph\">Flow Designer</span> Script step and pass the returned value to the REST step\n                to send the request to a third-party service. For more information, see the <span class=\"ph\">Flow Designer</span>\n                <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/paris-servicenow-platform/page/administer/flow-designer/reference/javascript-step-action-designer.html\" target=\"_blank\">Script\n              step</a>.</span></p>\n\n      <p class=\"p\"><span class=\"ph\">You can only use this API within the <span class=\"ph\">Flow Designer</span> environment.</span></p><br/><br/><h2 class=\"title sectiontitle\">API call order</h2>\n      \n      <p class=\"p\">Generate JSON payloads using these APIs in the following order:</p>\n\n      <div class=\"p\">\n                <dl class=\"dl\">\n                  \n                    <dt class=\"dt dlterm\"><span class=\"keyword apiname\">JSONStreamingBuilder</span>: Creates a builder object</dt>\n\n                    <dd class=\"dd\">Use these methods in the following order to create a builder object:<div class=\"p\">\n                        <ol class=\"ol\" id=\"JSONStreamingBuilderScopedAPI__d4088e221\">\n                          <li class=\"li\"><span class=\"keyword apiname\">JSONStreamingBuilder()</span>: <span class=\"ph\" id=\"JSONStreamingBuilderScopedAPI__d4088e227\">Instantiates the JSONStreamingBuilder\n                              object.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">withAttachment()</span>: Optional. <span class=\"ph\" id=\"JSONStreamingBuilderScopedAPI__d4088e234\">Creates the JSON object as a streaming\n                              attachment and stores it in the Streaming Attachments\n                              [streaming_attachment] table. If you do not call this method, the API\n                              creates the payload as a JSON string.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">expiresAt()</span>: Optional. <span class=\"ph\" id=\"JSONStreamingBuilderScopedAPI__d4088e241\">Sets a\n                              time when the attachment expires. Must also call the\n                                <span class=\"keyword apiname\">withAttachment()</span> method.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">build()</span>: <span class=\"ph\" id=\"JSONStreamingBuilderScopedAPI__d4088e251\">Returns a JSONStreamingAPI\n                              object.</span></li>\n\n                        </ol>\n\n                      </div>\n</dd>\n\n                  \n                  \n                    <dt class=\"dt dlterm\"><span class=\"keyword apiname\">JSONStreamingAPI</span>: Builds the JSON payload</dt>\n\n                    <dd class=\"dd\">Use these methods in the following order to create the JSON payload:<div class=\"p\">\n                        <ol class=\"ol\" id=\"JSONStreamingBuilderScopedAPI__d4088e268\">\n                          <li class=\"li\"><span class=\"keyword apiname\">startObject()</span>: <span class=\"ph\" id=\"JSONStreamingBuilderScopedAPI__d4088e274\">Creates the\n                              parent JSON object.</span></li>\n\n                          <li class=\"li\">Methods to generate the JSON key-value pairs, such as\n                              <span class=\"keyword apiname\">writeFieldName()</span>, <span class=\"keyword apiname\">writeString()</span>,\n                            and <span class=\"keyword apiname\">writeNumberField()</span>.</li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">endObject()</span>: <span class=\"ph\" id=\"JSONStreamingBuilderScopedAPI__d4088e293\">Closes the parent\n                              JSON object.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">getJSONString()</span> or\n                              <span class=\"keyword apiname\">getAttachmentId()</span>: Returns the JSON string or\n                            attachment ID that you created. </li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">close()</span>: <span class=\"ph\" id=\"JSONStreamingBuilderScopedAPI__d4088e308\">Closes the JSONStreamingAPI\n                              object.</span></li>\n\n                        </ol>\n\n                      </div>\n</dd>\n\n                  \n                </dl>\n\n              </div><br/><br/><h2 class=\"title sectiontitle\">Size limits</h2>\n      \n      <p class=\"p\">Payloads generated through this API cannot exceed these size limits:</p>\n\n      <div class=\"p\">\n        <ul class=\"ul\" id=\"JSONStreamingBuilderScopedAPI__ul_llq_msw_3lb\">\n                <li class=\"li\">Attachments: 200 MB</li>\n\n                <li class=\"li\">Strings: 5 MB</li>\n\n              </ul>\n\n      </div><br/><br/><h2 class=\"title sectiontitle\">Examples</h2>\n      \n      <p class=\"p\">This example shows how to create a JSON object and store it in the Attachment\n        [sys_attachment] table with a defined expiration date.</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.JSONStreamingBuilder()\n    .withAttachment() // Creates the JSON object in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the JSONStreamingAPI object. \n\n  builder.startObject()  // Begins generating the JSON object.\n\t.writeFieldName(\"firstName\")  // Adds a \"firstName\" field \n\t.writeString(\"John\")          // Writes the value of the \"firstName\" field\n\t.writeFieldName(\"lastName\")\n\t.writeString(\"Smith\")\n\t.writeNumberField(\"age\",\"25\") // Write a number field named \"age\" with value \"25\"\n\t.writeFieldName(\"address\")\n\t.startObject()                // Start a new object nested under the parent object\n\t\t.writeStringField(\"streetAddress\", \"21 2nd Street\")\n\t\t.writeStringField(\"city\", \"Santa Clara\")\n\t\t.writeStringField(\"state\", \"CA\")\n\t\t.writeStringField(\"postalCode\", \"11111\")\n\t.endObject()\n\t.writeFieldName(\"phoneNumber\")\n\t.startArray()                    // Start an array \n\t\t.startObject()               // Add the first object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"home\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"212 555-1234\")\n\t\t.endObject()\n\t\t.startObject()               // Add another object to the array \n\t\t\t.writeFieldName(\"type\")\n\t\t\t.writeString(\"fax\")\n\t\t\t.writeFieldName(\"number\")\n\t\t\t.writeString(\"646 555-4567\")\n\t\t.endObject()\n\t.endArray()\n\t.endObject()\n\n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} \n\ncatch (err) {\n  gs.log(err);\n} \n\nfinally {\n  builder.close();\n}</code></code></pre>\n      </div>\n\n      <p class=\"p\">Alternatively, this example shows how to use the API in the Script step and create the\n        payload as a JSON string. You can use this option to create payloads under 5 MB.</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>(function execute(inputs, outputs) {\n\n  var builder = new sn_ih.JSONStreamingBuilder().build();\n  \n  builder.startObject()\n    .enablePrettyPrint()\n    .writeTextElement(\"firstName\",\"John\")\n    .writeString(\"John\")\n    .writeFieldName(\"lastName\")\n    .writeString(\"Smith\")\n    .writeNumberField(\"age\",\"25\")\n    .writeFieldName(\"address\")\n    .startObject()\n      .writeStringField(\"streetAddress\", \"21 2nd Street\")\n      .writeStringField(\"city\", \"Santa Clara\")\n      .writeStringField(\"state\", \"CA\")\n      .writeStringField(\"postalCode\", \"11111\")\n    .endObject()\n    .writeFieldName(\"phoneNumber\")\n    .startArray()\n      .startObject()\n        .writeFieldName(\"type\")\n        .writeString(\"home\")\n        .writeFieldName(\"number\")\n        .writeString(\"212 555-1234\")\n      .endObject()\n      .startObject()\n        .writeFieldName(\"type\")\n        .writeString(\"fax\")\n        .writeFieldName(\"number\")\n        .writeString(\"646 555-4567\")\n      .endObject()\n    .endArray()\n    .endObject()\n\n  outputs.payload = builder.getJSONString();\n  \n})(inputs, outputs);</code></code></pre>\n      </div>\n\n      <p class=\"p\">Output:</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>{\n\"firstName\" : \"John\",\n\"lastName\" : \"Smith\",\n\"age\" : 25,\n\"address\" : {\n  \"streetAddress\" : \"21 2nd Street\",\n  \"city\" : \"Santa Clara\",\n  \"state\" : \"CA\",\n  \"postalCode\" : \"11111\"\n},\n\"phoneNumber\" : [ {\n  \"type\" : \"home\",\n  \"number\" : \"212 555-1234\"\n}, {\n  \"type\" : \"fax\",\n  \"number\" : \"646 555-4567\"\n} ]\n}</code></code></pre>\n      </div>",
    "type": "Server Side Scoped",
    "variable": ""
  },
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-close",
        "hasReturn": true,
        "name": "close()",
        "order": 4020,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Closes the XMLStreamingAPI object. You must call this method to close the stream after\n    building your XML document.",
        "text2": "<p>The following example shows how to create an XML document and store it in the Streaming\n        Attachments [streaming_attachment] table with a defined expiration date.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment()\n    .expiresAt(ttl)\n    .build();\n\n  builder.startDocument()\n    .writeTextElement(\"firstName\",\"John\")\n    .writeTextElement(\"lastName\",\"Smith\")\n    .writeTextElement(\"age\",\"25\")\n    .enablePrettyPrint()\n    .startElement(\"address\")\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\")\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement()\n    .disablePrettyPrint()\n    .startElement(\"phoneNumber\")\n      .writeTextElement(\"type\",\"home\")\n      .writeTextElement(\"number\",\"212 555-1234\")\n      .writeTextElement(\"type\",\"fax\")\n      .writeTextElement(\"number\",\"646 555-4567\")\n    .endElement()\n  .endDocument()\n      \n  gs.log(builder.getAttachmentId());\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code>",
            "text2": "The following  shows how to add pretty print formatting to the\n          <code class=\"ph codeph\">address</code> element.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-disablePrettyPrint",
        "hasExample": true,
        "hasReturn": true,
        "name": "disablePrettyPrint()",
        "order": 4620,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Ends pretty print XML formatting.",
        "text2": "<p>Before calling this method, you must first call <span class=\"keyword apiname\">enablePrettyPrint()</span> to\n        add XML formatting to a section.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment()\n    .expiresAt(ttl)\n    .build();\n\n  builder.startDocument()\n    .writeTextElement(\"firstName\",\"John\")\n    .writeTextElement(\"lastName\",\"Smith\")\n    .writeTextElement(\"age\",\"25\")\n    .enablePrettyPrint()\n    .startElement(\"address\")\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\")\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement()\n    .disablePrettyPrint()\n    .startElement(\"phoneNumber\")\n      .writeTextElement(\"type\",\"home\")\n      .writeTextElement(\"number\",\"212 555-1234\")\n      .writeTextElement(\"type\",\"fax\")\n      .writeTextElement(\"number\",\"646 555-4567\")\n    .endElement()\n  .endDocument()\n      \n  gs.log(builder.getAttachmentId());\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code>",
            "text2": "The following  shows how to add pretty print formatting to the\n          <code class=\"ph codeph\">address</code> element.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-enablePrettyPrint",
        "hasExample": true,
        "hasReturn": true,
        "name": "enablePrettyPrint()",
        "order": 4730,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds pretty print formatting to an XML element or tree of elements.",
        "text2": "<p>Use the <span class=\"keyword apiname\">disablePrettyPrint()</span> method to end the formatting.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('Employee')\n        .writeTextElement('firstName', 'John')\n        .writeTextElement('lastName', 'Smith')\n        .writeTextElement('age', '25')\n        .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "The following  shows how to create an XML document containing elements about a\n        user.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-endDocument",
        "hasExample": true,
        "hasReturn": true,
        "name": "endDocument()",
        "order": 4750,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Ends the structure of your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span> method and organizing your streaming\n        XML document, call the <span class=\"keyword apiname\">endDocument()</span> method at the end of your document's\n        structure. You must use these two methods together to successfully build your streaming XML\n        document's structure.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment()\n    .expiresAt(ttl)\n    .build();\n\n  builder.startDocument()\n      .startElement(\"address\")\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\")\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement()\n  .endDocument()\n      \n  gs.log(builder.getAttachmentId());\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code>",
            "text2": "The following  shows how to build a parent element named <code class=\"ph codeph\">address</code>\n        and then write four child elements.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-endElement",
        "hasExample": true,
        "hasReturn": true,
        "name": "endElement()",
        "order": 4760,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a closing tag to an XML element.",
        "text2": "<p>Use the following methods in this sequence to create a valid XML element:<ol class=\"ol\" id=\"XSA-endElement__ol_uwy_qb3_bmb\">\n          <li class=\"li\">Use the <span class=\"keyword apiname\">startElement()</span> method to add a starting tag.</li>\n\n          <li class=\"li\">Use the <span class=\"keyword apiname\">endElement()</span> method to add the closing tag.</li>\n\n        </ol></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "XML document created using the <span class=\"keyword apiname\">XMLStreamingAPI</span> methods, as a\n                string.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-getXMLString",
        "hasReturn": true,
        "name": "getXMLString()",
        "order": 10250,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the XML document as a\n    string.",
        "text2": "<p>To return the XML document as a string, don't call the\n          <span class=\"keyword apiname\">getAttachementId()</span> method in the <span class=\"keyword apiname\">XMLStreamingBuilder</span>\n        class. For more information, see <a class=\"xref\" href=\"dev.do#!/reference/api/paris/server/sn_ih-namespace/XMLStreamingBuilderScopedAPI\" title=\"Create a builder object to build a large XML payload for use in a REST or SOAP request to send bulk data to a third-party API. You can also create the payload as an XML string for a non-streaming option.\">XMLStreamingBuilder -\n        Scoped</a>.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "rootElement",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Optional. Root element, or top-level parent element, for your XML\n                document.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('Employee')\n        .writeTextElement('firstName', 'John')\n        .writeTextElement('lastName', 'Smith')\n        .writeTextElement('age', '25')\n        .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "The following  shows how to create an XML document containing elements with\n        information about an employee.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "namespaceDefinitionMap",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Object",
            "text2": "Optional. Map of keys and values for the namespaces and their associated values\n                in a subsequent list of elements. For example:\n                <pre class=\"pre codeblock\"><code>{\n'namespaceOne':'namespaceValue',\n'namespaceTwo':'namespaceValue'\n}</code></pre>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-startDocument_S_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startDocument(String rootElement, Object namespaceDefinitionMap)",
        "order": 14630,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Begins building an XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">build()</span> method, call the\n          <span class=\"keyword apiname\">startDocument()</span> method to start organizing your XML document. You must\n        also call the <span class=\"keyword apiname\">endDocument</span> method at the end of your document's\n        structure.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Name of the XML element.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment()\n    .expiresAt(ttl)\n    .build();\n\n  builder.startDocument()\n      .startElement(\"address\")\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\")\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement()\n  .endDocument()\n      \n  gs.log(builder.getAttachmentId());\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code>",
            "text2": "The following  shows how to build a parent element named <span class=\"keyword apiname\">address</span>\n        and then write four child elements.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "namespaceMap",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Object",
            "text2": "Optional. Map of keys and values for the namespaces and their associated values\n                in a subsequent list of elements. For\n                example:<pre class=\"pre codeblock\"><code>{\n'namespaceOne':'namespaceValue',\n'namespaceTwo':'namespaceValue'\n}</code></pre>",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "attributeMap",
            "order": 30,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Object",
            "text2": "Optional. Map of keys and values for the attributes and their associated values\n                in a subsequent list of elements.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "prefix",
            "order": 40,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Optional. Prefix for the XML element.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-startElement_S_O_O_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startElement(String name, Object namespaceMap, Object attributeMap, String prefix)",
        "order": 14640,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a starting tag for an XML element.",
        "text2": "<p>Use the following methods in this sequence to create a valid XML element:<ol class=\"ol\" id=\"XSA-startElement_S_O_O_S__ol_uwy_qb3_bmb\">\n          <li class=\"li\">Use the <span class=\"keyword apiname\">startElement()</span> method to add a starting tag.</li>\n\n          <li class=\"li\">Use the <span class=\"keyword apiname\">endElement()</span> method to add the closing tag.</li>\n\n        </ol></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment()\n    .expiresAt(ttl)\n    .build();\n\n  builder.startDocument()\n      .writeArray('city', ['Santa Clara','San Diego','Chicago','Sydney','London'], 'officeLocations')\n  .endDocument()\n      \n  gs.log(builder.getAttachmentId());\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code>",
            "text2": "The following  shows how to build a parent element named\n          <code class=\"ph codeph\">officeLocations</code>, and then nest an array of five <code class=\"ph codeph\">city</code>\n        elements.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "elementName",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Name of the XML element associated with each string listed in the\n                  <span class=\"keyword parmname\">data</span>\n                array.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "data",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Array",
            "text2": "List of values to assign to each element nested inside\n                  <span class=\"keyword parmname\">wrappingElement</span>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "wrappingElement",
            "order": 30,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Parent element containing each\n                <span class=\"keyword parmname\">elementName</span>.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeArray_S_O_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeArray(String elementName, Array data, String wrappingElement)",
        "order": 15680,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a list of nested elements with predefined text to your streaming XML\n    document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span> method, you can call the\n          <span class=\"keyword apiname\">writeArray()</span> method to add a block of nested elements to your streaming\n        XML document.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('Employee')\n    .writeAttribute('idNumber','12345')\n        .writeTextElement('firstName', 'John')\n        .writeTextElement('lastName', 'Smith')\n        .writeTextElement('age', '25')\n    .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "This  adds an attribute named <span class=\"keyword apiname\">idNumber</span> to the\n          <span class=\"keyword apiname\">employee</span> element.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Name of the XML element's attribute.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "value",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Value for the XML element's attribute.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeAttribute_S_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeAttribute(String name, String value)",
        "order": 15690,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds an attribute to an element in your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span>, <span class=\"keyword apiname\">startElement()</span>, or\n          <span class=\"keyword apiname\">writeTextElement()</span> method, you can call the\n          <span class=\"keyword apiname\">writeAttribute()</span> method to add an attribute to the associated XML\n        element.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('Employee')\n    .writeAttributes({'idNumber':'12345', 'officeLocation':'San Diego', 'department':'Sales'})\n        .writeTextElement('firstName', 'John')\n        .writeTextElement('lastName', 'Smith')\n        .writeTextElement('age', '25')\n    .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "This  adds attributes named <span class=\"keyword apiname\">idNumber</span>,\n          <span class=\"keyword apiname\">officeLocation</span>, and <span class=\"keyword apiname\">department</span> to the\n          <span class=\"keyword apiname\">employee</span> element.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "attributeMap",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Object",
            "text2": "Map of keys and values containing attribute names and values to associate with\n                the XML element. For\n                example:<pre class=\"pre codeblock\"><code>{\n'attributeOne':'attributeValue',\n'attributeTwo':'attributeValue'\n}</code></pre>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeAttributes_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeAttributes(Object attributeMap)",
        "order": 15700,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds attributes to an element in your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span>, <span class=\"keyword apiname\">startElement()</span>, or\n          <span class=\"keyword apiname\">writeTextElement()</span> method, you can call the\n          <span class=\"keyword apiname\">writeAttributes()</span> method to add attributes to the associated XML\n        element.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('Employee')\n        .writeTextElement('firstName', 'John')\n        .writeTextElement('lastName', 'Smith')\n        .writeTextElement('age', '25')\n        .writeCDataElement('timeWorked')\n        .writeCData('&lt; 2 years')\n    .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "This  adds CDATA to the CDATA element\n        <code class=\"ph codeph\">timeWorked</code>.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "data",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Value to include after the CDATA keyword in your CDATA element.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeCData_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeCData(String data)",
        "order": 15740,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds CDATA to your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">writeCDataElement()</span> method, you can call the\n          <span class=\"keyword apiname\">writeCData()</span> method to add CDATA within the element.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment()\n    .expiresAt(ttl)\n    .build();\n\n  builder.startDocument()\n  .writeDtd('address')\n  .writeCDataElement('home', '#PCDATA', {'streetAddress', 'city', 'state', 'postalCode'})\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\")\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n  .endDocument()\n      \n  gs.log(builder.getAttachmentId());\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code>",
            "text2": "This  uses a document type definition named <code class=\"ph codeph\">address</code>\n        to\n        define an internal document type definition for the XML document.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Name of the CDATA element.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "data",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Optional. Type of data to parse the CDATA element\n                as.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "prefix",
            "order": 30,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Object",
            "text2": "Optional. Map of child elements and values that the CDATA element includes. For\n                example:\n                <pre class=\"pre codeblock\"><code>{\n'prefixOne':'prefixValue',\n'prefixTwo':'prefixValue'\n}</code></pre>You\n                must associate an XML element's prefix with a namespace using <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/paris-application-development/page/app-store/dev_portal/API_reference/XMLStreamingAPI/concept/XMLStreamingAPIScopedAPI.html#XSA-writeNamespace\" target=\"_blank\">writeNamespace()</a>.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeCDataElement_S_S_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeCDataElement(String name, String data, Object prefix)",
        "order": 15750,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a CDATA element to your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span> method, you can call the\n          <span class=\"keyword apiname\">writeCDataElement()</span> method to add a CDATA element to your XML\n        document.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('Employee')\n        .startElement('firstName')\n        .writeCharacters('John')\n        .EndElement()\n        .startElement('lastName')\n        .writeCharacters('Smith')\n        .endElement()\n    .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "The following  shows how to add text values to elements in your XML document.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "text",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Text to add to a section of your XML document.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeCharacters_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeCharacters(String text)",
        "order": 15760,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds text to your XML document.",
        "text2": "<p>Use the <span class=\"keyword apiname\">writeCharacters()</span> method to insert string data to a section in\n        your XML document.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "comment",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Comment text to include.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('Employee')\n        .writeComment('Element for information related to active employees.')\n        .writeTextElement('firstName', 'John')\n        .writeTextElement('lastName', 'Smith')\n        .writeTextElement('age', '25')\n    .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "The following  shows how to add a comment to an XML document.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeComment_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeComment(String comment)",
        "order": 15770,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a comment to your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span> method, you can call the\n          <span class=\"keyword apiname\">writeComment()</span> method to add a comment to your XML document.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "dtd",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Name of a valid XML document type definition.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment()\n    .expiresAt(ttl)\n    .build();\n\n  builder.startDocument()\n  .writeDtd('address')\n  .writeCDataElement('home', '#PCDATA', {'streetAddress', 'city', 'state', 'postalCode'})\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\")\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n  .endDocument()\n      \n  gs.log(builder.getAttachmentId());\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code>",
            "text2": "This  uses a document type definition named <span class=\"keyword apiname\">address</span> to define an\n        internal document type definition for the XML document.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeDtd_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeDtd(String dtd)",
        "order": 15790,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a document type definition to your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span> method, you can call the\n          <span class=\"keyword apiname\">writeDtd()</span> method to add a valid XML document type definition to your\n        XML document.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('company')\n    .writeNamespace('x','https://www.servicenow.com')\n        .writeTextElement('companyName', 'ServiceNow')\n        .writeNamespace('x')\n    .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "The following  shows how to add a namespace and URI to the <code class=\"ph codeph\">company</code>\n        root element, and then assign the prefix to the nested <code class=\"ph codeph\">companyName</code>\n        element.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "prefix",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Prefix for the XML namespace.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "namespaceURI",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Optional. URI for the namespace.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeNamespace",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeNamespace(String prefix, String namespaceURI)",
        "order": 15820,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a namespace to an element in your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span>, <span class=\"keyword apiname\">startElement()</span>, or\n          <span class=\"keyword apiname\">writeTextElement()</span> method, you can call the\n          <span class=\"keyword apiname\">writeNamespace()</span> method to add a namespace to the associated XML\n        element.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "namespaceMap",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Object",
            "text2": "Map of keys and values containing namespace prefixes and URIs to associate with\n                the root element of the\n                XML\n                document. For example:\n                <pre class=\"pre codeblock\"><code>{\n'namespaceOne':'namespaceValue',\n'namespaceTwo':'namespaceValue'\n}</code></pre>",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('company')\n    .writeNamespaces({'x':'https://www.servicenow.com', 'y':'https://www.developer.servicenow.com'})\n        .writeTextElement('companyName', 'ServiceNow')\n        .writeNamespace('x')\n        .writeTextElement('devFramework', 'Now Experience UI Framework')\n        .writeNamespace('y')\n    .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "This  adds two namespaces and URIs to the <span class=\"keyword apiname\">company</span> root element,\n        and then assigns the appropriate prefixes to the nested elements.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeNamespaces_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeNamespaces(Object namespaceMap)",
        "order": 15830,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds namespaces to the\n    root\n    element in your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span> or <span class=\"keyword apiname\">startElement()</span>\n        method, you can call the <span class=\"keyword apiname\">writeNamespaces()</span> method to declare namespaces\n        for the associated XML element.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>try {\n    var ttl = new GlideDateTime('2011-01-01 12:00:00');\n    var builder = new sn_ih.XMLStreamingBuilder().withAttachment().expiresAt(ttl);\n    var streamingDocument = builder.build();\n\n    streamingDocument.startDocument('Employee')\n        .writeTextElement('firstName', 'John')\n        .writeTextElement('lastName', 'Smith')\n        .writeTextElement('age', '25')\n    .endDocument();\n    gs.log(streamingDocument.getAttachmentId());\n} catch (err) {\n    gs.log(err);\n} finally {\n    streamingDocument.close();\n}</code>",
            "text2": "The following  shows how to create an XML document containing three elements with\n        information about an employee.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Name of the XML element.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingAPI",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "text",
            "order": 20,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Value for the XML element.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "prefix",
            "order": 30,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Object",
            "text2": "Optional. Map of prefixes and values associated with the XML element. For\n                example:\n                <pre class=\"pre codeblock\"><code>{\n'prefixOne':'prefixValue',\n'prefixTwo':'prefixValue'\n}</code></pre>You\n                must associate an XML element's prefix with a namespace using <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/paris-application-development/page/app-store/dev_portal/API_reference/XMLStreamingAPI/concept/XMLStreamingAPIScopedAPI.html#XSA-writeNamespace\" target=\"_blank\">writeNamespace()</a>.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSA-writeTextElement_S_S_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "writeTextElement(String name, String text, Object prefix)",
        "order": 15940,
        "parentId": "XMLStreamingAPIScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingapi_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a single XML element to your XML document.",
        "text2": "<p>After calling the <span class=\"keyword apiname\">startDocument()</span> method, you can call the\n          <span class=\"keyword apiname\">writeTextElement()</span> method to add a single XML element to your  XML\n        document's structure.</p>",
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "XMLStreamingAPIScopedAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "XMLStreamingAPI",
    "namespace_id": "sn_ih-namespace",
    "release": "paris",
    "text": "<span class=\"ph\">Build a large streaming XML payload for use in a REST\n                or SOAP request to send bulk data to a third-party API. You can also create the\n                payload as an XML string for a non-streaming option.</span>",
    "text2": "<div class=\"p\"><span class=\"ph\">Use these methods in a <span class=\"ph\">Flow Designer</span> Script step with the <span class=\"keyword parmname\">sn_ih</span> namespace identifier. For\n                example, you can use this API to create an XML payload in the <span class=\"ph\">Flow Designer</span> Script step and pass the returned value to the REST step\n                to send the request to a third-party service. For more information, see the <span class=\"ph\">Flow Designer</span>\n                <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/paris-servicenow-platform/page/administer/flow-designer/reference/javascript-step-action-designer.html\" target=\"_blank\">Script\n              step</a>.</span><div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">You can only use this API within the <span class=\"ph\">Flow Designer</span> environment.</span></div>\n</div>\n\n      <p class=\"p\">There is no constructor for this class. Instead, you must call the build() method in the\n        XMLStreamingBuilder class to return an XMLStreamingAPI object. For more information, see\n          <a class=\"xref\" href=\"dev.do#!/reference/api/paris/server/sn_ih-namespace/XMLStreamingBuilderScopedAPI\" title=\"Create a builder object to build a large XML payload for use in a REST or SOAP request to send bulk data to a third-party API. You can also create the payload as an XML string for a non-streaming option.\">XMLStreamingBuilder</a>.</p><br/><br/><h2 class=\"title sectiontitle\">API call order</h2>\n      \n      <p class=\"p\">Generate XML payloads by first instantiating a builder object with\n          <span class=\"keyword apiname\">XMLStreamingBuilder</span> and then calling the methods in the\n          <span class=\"keyword apiname\">XMLStreamingAPI</span>\n        class:</p>\n\n      <div class=\"p\">\n                <dl class=\"dl\">\n                  \n                    <dt class=\"dt dlterm\">1. <span class=\"keyword apiname\">XMLStreamingBuilder</span>: Creates a builder object</dt>\n\n                    <dd class=\"dd\">Use these method in the following order to create a builder object:<div class=\"p\">\n                        <ol class=\"ol\" id=\"XMLStreamingAPIScopedAPI__d2977e451\">\n                          <li class=\"li\"><span class=\"keyword apiname\">XMLStreamingBuilder()</span>: <span class=\"ph\">Instantiates the\n                              XMLStreamingBuilder object.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">withAttachment()</span>: Optional. <span class=\"ph\">Creates an XML\n                              document as an attachment and stores it in the Streaming Attachments\n                              [streaming_attachment] table. If you don't call this method, the API\n                              builds the payload as an XML string.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">expiresAt()</span>: Optional. <span class=\"ph\">Sets a time when the\n                              attachment expires. False is the default. Must also call the\n                                <span class=\"keyword apiname\">withAttachment()</span> method.</span>\n                            </li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">build()</span>: <span class=\"ph\">Returns an XMLStreamingAPI\n                              object.</span></li>\n\n                        </ol>\n\n                      </div>\n</dd>\n\n                  \n                  \n                    <dt class=\"dt dlterm\">2. <span class=\"keyword apiname\">XMLStreamingAPI</span>: Builds the XML payload</dt>\n\n                    <dd class=\"dd\">Use these methods in the following order to create the XML payload:<div class=\"p\">\n                        <ol class=\"ol\" id=\"XMLStreamingAPIScopedAPI__d2977e502\">\n                          <li class=\"li\"><span class=\"keyword apiname\">startDocument()</span>: <span class=\"ph\">Creates the top-level parent\n                              element in the XML document.</span></li>\n\n                          <li class=\"li\">Methods to generate child elements in the XML document, such as\n                              <span class=\"keyword apiname\">writeTextElement()</span>,\n                              <span class=\"keyword apiname\">startElement()</span>, and\n                            <span class=\"keyword apiname\">writeArray()</span>.</li>\n\n                          <li class=\"li\">Methods to generate attributes for an element, such as\n                              <span class=\"keyword apiname\">writeAttribute()</span>,\n                              <span class=\"keyword apiname\">writeNamespace()</span>, and\n                            <span class=\"keyword apiname\">writeDtd()</span>.</li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">endElement()</span>: <span class=\"ph\">Closes an XML element.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">endDocument</span>: <span class=\"ph\">Closes the top-level parent\n                              element.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">getXMLString()</span> or\n                              <span class=\"keyword apiname\">getAttachmentId()</span>: Returns the XML string or\n                            attachment ID that you created. </li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">close()</span>: <span class=\"ph\">Closes the XMLStreamingAPI\n                              object.</span></li>\n\n                        </ol>\n\n                      </div>\n</dd>\n\n                  \n                </dl>\n\n              </div><br/><br/><h2 class=\"title sectiontitle\">Size limits</h2>\n      \n      \n      <p class=\"p\">Payloads generated through this API cannot exceed these size limits:</p>\n\n      <div class=\"p\">\n        <ul class=\"ul\" id=\"XMLStreamingAPIScopedAPI__ul_syy_lsw_3lb\">\n                <li class=\"li\">Attachments: 200 MB</li>\n\n                <li class=\"li\">Strings: 5 MB</li>\n\n              </ul>\n\n      </div><br/><br/><p class=\"p\">The following example shows how to create an XML document and store it in the Streaming\n        Attachments [streaming_attachment] table with a defined expiration\n        date.</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>\ntry {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment() // Creates the XML document in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the XMLStreamingAPI object.\n\n  builder.startDocument() // Begins generating the XML document.\n    .writeTextElement(\"firstName\",\"John\") // Writes a \"firstName\" element and value.\n    .writeTextElement(\"lastName\",\"Smith\")\n    .writeTextElement(\"age\",\"25\")\n    .startElement(\"address\") // Adds an \"address\" parent element.\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\") // Writes a child element and value.\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement() // Adds a closing tag for the \"address\" element.\n    .startElement(\"phoneNumber\")\n      .writeTextElement(\"type\",\"home\")\n      .writeTextElement(\"number\",\"212 555-1234\")\n      .writeTextElement(\"type\",\"fax\")\n      .writeTextElement(\"number\",\"646 555-4567\")\n    .endElement()\n  .endDocument() // Stops generating the XML document.\n      \n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code></code></pre>\n      </div>\n\n      <p class=\"p\">Alternatively, this example shows how to use the API in the Script step and create the\n        payload as an XML string. You can use this option to create payloads under\n        5\n        MB.</p>\n\n      <div class=\"p\" id=\"XMLStreamingAPIScopedAPI__xml-non-streaming-example\">\n        <pre><code class='language-javascript'><code>(function execute(inputs, outputs) {\n\n  var builder = new sn_ih.XMLStreamingBuilder().build();\n  \n  builder.startDocument()\n    .enablePrettyPrint()\n    .writeTextElement(\"firstName\",\"John\")\n    .writeTextElement(\"lastName\",\"Smith\")\n    .writeTextElement(\"age\",\"25\")\n    .startElement(\"address\")\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\")\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement()\n    .startElement(\"phoneNumber\")\n      .writeTextElement(\"type\",\"home\")\n      .writeTextElement(\"number\",\"212 555-1234\")\n      .writeTextElement(\"type\",\"fax\")\n      .writeTextElement(\"number\",\"646 555-4567\")\n    .endElement()\n  .endDocument()\n\n  outputs.payload = builder.getXMLString();\n  \n})(inputs, outputs);</code></code></pre>\n      </div>\n\n      <p class=\"p\">Output:</p>\n\n      <div class=\"p\" id=\"XMLStreamingAPIScopedAPI__xml-non-streaming-example-output\">\n        <pre><code class='language-javascript'><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;firstName&gt;John&lt;/firstName&gt;\n&lt;lastName&gt;Smith&lt;/lastName&gt;\n&lt;age&gt;25&lt;/age&gt;\n&lt;address&gt;\n  &lt;streetAddress&gt;21 2nd Street&lt;/streetAddress&gt;\n  &lt;city&gt;Santa Clara&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;postalCode&gt;11111&lt;/postalCode&gt;\n&lt;/address&gt;\n&lt;phoneNumber&gt;\n  &lt;type&gt;home&lt;/type&gt;\n  &lt;number&gt;212 555-1234&lt;/number&gt;\n  &lt;type&gt;fax&lt;/type&gt;\n  &lt;number&gt;646 555-4567&lt;/number&gt;\n&lt;/phoneNumber&gt;</code></code></pre>\n      </div>",
    "type": "Server Side Scoped",
    "variable": ""
  },
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var builder = new sn_ih.XMLStreamingBuilder()</code>",
            "text2": "This  shows how to instantiate a <code class=\"ph codeph\">builder</code> object.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "XSB-StreamingXMLBuilder",
        "hasExample": true,
        "name": "XMLStreamingBuilder()",
        "order": 2580,
        "parentId": "XMLStreamingBuilderScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingbuilder_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Instantiates the XMLStreamingBuilder object.",
        "text2": null,
        "type": "Constructor",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/paris/server/sn_ih-namespace/XMLStreamingAPIScopedAPI\" title=\"Build a large streaming XML payload for use in a REST or SOAP request to send bulk data to a third-party API. You can also create the payload as an XML string for a non-streaming option.\">XMLStreamingAPI</a>",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "<span class=\"ph\">Streaming XML object for constructing the\n                payload.</span>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\ntry {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment() // Creates the XML document in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the XMLStreamingAPI object.\n\n  builder.startDocument() // Begins generating the XML document.\n    .writeTextElement(\"firstName\",\"John\") // Writes a \"firstName\" element and value.\n    .writeTextElement(\"lastName\",\"Smith\")\n    .writeTextElement(\"age\",\"25\")\n    .startElement(\"address\") // Adds an \"address\" parent element.\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\") // Writes a child element and value.\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement() // Adds a closing tag for the \"address\" element.\n    .startElement(\"phoneNumber\")\n      .writeTextElement(\"type\",\"home\")\n      .writeTextElement(\"number\",\"212 555-1234\")\n      .writeTextElement(\"type\",\"fax\")\n      .writeTextElement(\"number\",\"646 555-4567\")\n    .endElement()\n  .endDocument() // Stops generating the XML document.\n      \n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code>",
            "text2": "The following  shows how to create an XML document and store it in the Streaming\n        Attachments [streaming_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "XSB-build",
        "hasExample": true,
        "hasReturn": true,
        "name": "build()",
        "order": 3730,
        "parentId": "XMLStreamingBuilderScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingbuilder_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns an XMLStreamingAPI object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "paris",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\ntry {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment() // Creates the XML document in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the XMLStreamingAPI object.\n\n  builder.startDocument() // Begins generating the XML document.\n    .writeTextElement(\"firstName\",\"John\") // Writes a \"firstName\" element and value.\n    .writeTextElement(\"lastName\",\"Smith\")\n    .writeTextElement(\"age\",\"25\")\n    .startElement(\"address\") // Adds an \"address\" parent element.\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\") // Writes a child element and value.\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement() // Adds a closing tag for the \"address\" element.\n    .startElement(\"phoneNumber\")\n      .writeTextElement(\"type\",\"home\")\n      .writeTextElement(\"number\",\"212 555-1234\")\n      .writeTextElement(\"type\",\"fax\")\n      .writeTextElement(\"number\",\"646 555-4567\")\n    .endElement()\n  .endDocument() // Stops generating the XML document.\n      \n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code>",
            "text2": "The following  shows how to create an XML document and store it in the Streaming\n        Attachments [streaming_attachment] table with a defined expiration date.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingBuilder",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to initiate the XML payload.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "expiresAt",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "<a class=\"xref\" href=\"dev.do#!/reference/api/paris/server/no-namespace/c_APIRef\" title=\"The scoped GlideDateTime class provides methods for performing operations on GlideDateTime objects, such as instantiating GlideDateTime objects or working with glide_date_time fields.\">GlideDateTime</a>",
            "text2": "Object that is set when the attachment expires. <div class=\"p\">\n                  <ul class=\"ul\" id=\"XSB-expiresAt_O__ul_xsc_trx_3lb\">\n                    <li class=\"li\">Minimum value: 7200 seconds, or two hours, from the time the attachment is\n                      created. This is the default value if you don't call the\n                        <span class=\"keyword apiname\">expiresAt()</span> method.</li>\n\n                    <li class=\"li\">Maximum value: 172800 seconds, or 48 hours, from the time the attachment is\n                      created.</li>\n\n                  </ul>\n\n                </div>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "XSB-expiresAt_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "expiresAt(Object expiresAt)",
        "order": 5200,
        "parentId": "XMLStreamingBuilderScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingbuilder_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "<span class=\"ph\">Sets a\n                              time when the attachment expires. Must also call the\n                                <span class=\"keyword apiname\">withAttachment()</span> method.</span>",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "XMLStreamingBuilder",
            "order": 10,
            "release": "paris",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to initiate the XML payload.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "XSB-withAttachment",
        "hasReturn": true,
        "name": "withAttachment()",
        "order": 15630,
        "parentId": "XMLStreamingBuilderScopedAPI",
        "parent_permalink": "class_namespace__scoped_xmlstreamingbuilder_sn_ih__paris",
        "release": "paris",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Creates an XML document as an attachment and stores it in the Streaming Attachments\n    [streaming_attachment] table. If you don't call this method, the API creates the XML document as\n    a string.",
        "text2": null,
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "XMLStreamingBuilderScopedAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "XMLStreamingBuilder",
    "namespace_id": "sn_ih-namespace",
    "release": "paris",
    "text": "<span class=\"ph\">Create a builder object to build a large XML\n                payload for use in a REST or SOAP request to send bulk data to a third-party API.\n                You can also create the payload as an XML string for a non-streaming\n              option.</span>",
    "text2": "<div class=\"p\"><span class=\"ph\">Use these methods in a <span class=\"ph\">Flow Designer</span> Script step with the <span class=\"keyword parmname\">sn_ih</span> namespace identifier. For\n                example, you can use this API to create an XML payload in the <span class=\"ph\">Flow Designer</span> Script step and pass the returned value to the REST step\n                to send the request to a third-party service. For more information, see the <span class=\"ph\">Flow Designer</span>\n                <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/paris-servicenow-platform/page/administer/flow-designer/reference/javascript-step-action-designer.html\" target=\"_blank\">Script\n              step</a>.</span><div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">You can only use this API within the <span class=\"ph\">Flow Designer</span> environment.</span></div>\n</div><br/><br/><h2 class=\"title sectiontitle\">API call order</h2>\n      \n      <p class=\"p\">Generate XML payloads by first instantiating a builder object with\n          <span class=\"keyword apiname\">XMLStreamingBuilder</span> and then calling the methods in the\n          <span class=\"keyword apiname\">XMLStreamingAPI</span>\n        class:</p>\n\n      <div class=\"p\">\n                <dl class=\"dl\">\n                  \n                    <dt class=\"dt dlterm\">1. <span class=\"keyword apiname\">XMLStreamingBuilder</span>: Creates a builder object</dt>\n\n                    <dd class=\"dd\">Use these method in the following order to create a builder object:<div class=\"p\">\n                        <ol class=\"ol\" id=\"XMLStreamingBuilderScopedAPI__d1821e451\">\n                          <li class=\"li\"><span class=\"keyword apiname\">XMLStreamingBuilder()</span>: <span class=\"ph\">Instantiates the\n                              XMLStreamingBuilder object.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">withAttachment()</span>: Optional. <span class=\"ph\">Creates an XML\n                              document as an attachment and stores it in the Streaming Attachments\n                              [streaming_attachment] table. If you don't call this method, the API\n                              builds the payload as an XML string.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">expiresAt()</span>: Optional. <span class=\"ph\">Sets a time when the\n                              attachment expires. False is the default. Must also call the\n                                <span class=\"keyword apiname\">withAttachment()</span> method.</span>\n                            </li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">build()</span>: <span class=\"ph\">Returns an XMLStreamingAPI\n                              object.</span></li>\n\n                        </ol>\n\n                      </div>\n</dd>\n\n                  \n                  \n                    <dt class=\"dt dlterm\">2. <span class=\"keyword apiname\">XMLStreamingAPI</span>: Builds the XML payload</dt>\n\n                    <dd class=\"dd\">Use these methods in the following order to create the XML payload:<div class=\"p\">\n                        <ol class=\"ol\" id=\"XMLStreamingBuilderScopedAPI__d1821e502\">\n                          <li class=\"li\"><span class=\"keyword apiname\">startDocument()</span>: <span class=\"ph\">Creates the top-level parent\n                              element in the XML document.</span></li>\n\n                          <li class=\"li\">Methods to generate child elements in the XML document, such as\n                              <span class=\"keyword apiname\">writeTextElement()</span>,\n                              <span class=\"keyword apiname\">startElement()</span>, and\n                            <span class=\"keyword apiname\">writeArray()</span>.</li>\n\n                          <li class=\"li\">Methods to generate attributes for an element, such as\n                              <span class=\"keyword apiname\">writeAttribute()</span>,\n                              <span class=\"keyword apiname\">writeNamespace()</span>, and\n                            <span class=\"keyword apiname\">writeDtd()</span>.</li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">endElement()</span>: <span class=\"ph\">Closes an XML element.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">endDocument</span>: <span class=\"ph\">Closes the top-level parent\n                              element.</span></li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">getXMLString()</span> or\n                              <span class=\"keyword apiname\">getAttachmentId()</span>: Returns the XML string or\n                            attachment ID that you created. </li>\n\n                          <li class=\"li\"><span class=\"keyword apiname\">close()</span>: <span class=\"ph\">Closes the XMLStreamingAPI\n                              object.</span></li>\n\n                        </ol>\n\n                      </div>\n</dd>\n\n                  \n                </dl>\n\n              </div><br/><br/><h2 class=\"title sectiontitle\">Size\n        limits</h2>\n      \n      <p class=\"p\">Payloads generated through this API cannot exceed these size limits:</p>\n\n      <div class=\"p\">\n        <ul class=\"ul\" id=\"XMLStreamingBuilderScopedAPI__ul_llq_msw_3lb\">\n                <li class=\"li\">Attachments: 200 MB</li>\n\n                <li class=\"li\">Strings: 5 MB</li>\n\n              </ul>\n\n      </div><br/><br/><p class=\"p\">The following example shows how to create an XML document and store it in the Streaming\n        Attachments [streaming_attachment] table with a defined expiration\n        date.</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>\ntry {\n  var ttl = new GlideDateTime(\"2011-01-01 12:00:00\");\n  var builder = new sn_ih.XMLStreamingBuilder()\n    .withAttachment() // Creates the XML document in streaming mode within an attachment.\n    .expiresAt(ttl) // Sets an expiration date for the attachment.\n    .build(); // Creates the XMLStreamingAPI object.\n\n  builder.startDocument() // Begins generating the XML document.\n    .writeTextElement(\"firstName\",\"John\") // Writes a \"firstName\" element and value.\n    .writeTextElement(\"lastName\",\"Smith\")\n    .writeTextElement(\"age\",\"25\")\n    .startElement(\"address\") // Adds an \"address\" parent element.\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\") // Writes a child element and value.\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement() // Adds a closing tag for the \"address\" element.\n    .startElement(\"phoneNumber\")\n      .writeTextElement(\"type\",\"home\")\n      .writeTextElement(\"number\",\"212 555-1234\")\n      .writeTextElement(\"type\",\"fax\")\n      .writeTextElement(\"number\",\"646 555-4567\")\n    .endElement()\n  .endDocument() // Stops generating the XML document.\n      \n  gs.log(builder.getAttachmentId()); // Returns the sys_id of the attachment.\n} catch (err) {\n  gs.log(err);\n} finally {\n  builder.close();\n}</code></code></pre>\n      </div>\n\n      <p class=\"p\">Alternatively, this example shows how to use the API in the Script step and create the\n        payload as an XML string. You can use this option to create payloads under\n        5\n        MB.</p>\n\n      <div class=\"p\" id=\"XMLStreamingBuilderScopedAPI__xml-non-streaming-example\">\n        <pre><code class='language-javascript'><code>(function execute(inputs, outputs) {\n\n  var builder = new sn_ih.XMLStreamingBuilder().build();\n  \n  builder.startDocument()\n    .enablePrettyPrint()\n    .writeTextElement(\"firstName\",\"John\")\n    .writeTextElement(\"lastName\",\"Smith\")\n    .writeTextElement(\"age\",\"25\")\n    .startElement(\"address\")\n      .writeTextElement(\"streetAddress\", \"21 2nd Street\")\n      .writeTextElement(\"city\", \"Santa Clara\")\n      .writeTextElement(\"state\", \"CA\")\n      .writeTextElement(\"postalCode\", \"11111\")\n    .endElement()\n    .startElement(\"phoneNumber\")\n      .writeTextElement(\"type\",\"home\")\n      .writeTextElement(\"number\",\"212 555-1234\")\n      .writeTextElement(\"type\",\"fax\")\n      .writeTextElement(\"number\",\"646 555-4567\")\n    .endElement()\n  .endDocument()\n\n  outputs.payload = builder.getXMLString();\n  \n})(inputs, outputs);</code></code></pre>\n      </div>\n\n      <p class=\"p\">Output:</p>\n\n      <div class=\"p\" id=\"XMLStreamingBuilderScopedAPI__xml-non-streaming-example-output\">\n        <pre><code class='language-javascript'><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;firstName&gt;John&lt;/firstName&gt;\n&lt;lastName&gt;Smith&lt;/lastName&gt;\n&lt;age&gt;25&lt;/age&gt;\n&lt;address&gt;\n  &lt;streetAddress&gt;21 2nd Street&lt;/streetAddress&gt;\n  &lt;city&gt;Santa Clara&lt;/city&gt;\n  &lt;state&gt;CA&lt;/state&gt;\n  &lt;postalCode&gt;11111&lt;/postalCode&gt;\n&lt;/address&gt;\n&lt;phoneNumber&gt;\n  &lt;type&gt;home&lt;/type&gt;\n  &lt;number&gt;212 555-1234&lt;/number&gt;\n  &lt;type&gt;fax&lt;/type&gt;\n  &lt;number&gt;646 555-4567&lt;/number&gt;\n&lt;/phoneNumber&gt;</code></code></pre>\n      </div>",
    "type": "Server Side Scoped",
    "variable": ""
  }
]