declare class CMDBTransformUtil {
  constructor();
  /**
   * Returns any errors generated by the previous identifyAndReconcile()
   * or identifyAndReconcileEnhanced() method call.
   */
  getError(): any;
  /**
   * Returns the JSON payload from the previous identifyAndReconcile() or
   * identifyAndReconcileEnhanced() method call.
   */
  getOutputPayload(): any;
  /**
   * Returns the sys_id of the configuration item (CI) that was inserted or updated.
   */
  getOutputRecordSysId(): any;
  /**
   * Returns the JSON payload generated from the specified input.
   * @param source Global object available in transform map scripts that holds the incoming
   * record.
   * @param map Map object available in transform map scripts that holds the current transform
   * map record.
   * @param log Log object available in transform map scripts.
   */
  getPayload(source: any, map: any, log: any): any;
  /**
   * Determines if an error occurred in the previous
   * identifyAndReconcile() or identifyAndReconcileEnhanced()
   * method call.
   */
  hasError(): any;
  /**
   * Inserts or updates a configuration item (CI) in the Configuration Management Database (CMDB).
   * @param source Global object available in transform map scripts that holds the incoming
   * record.
   * @param map Map object available in transform map scripts that holds the current transform
   * map record.
   * @param log Log object available in transform map scripts.
   */
  identifyAndReconcile(source: any, map: any, log: any): any;
  /**
   * Inserts or updates a configuration item (CI) in the Configuration Management Database (CMDB).
   * @param source Global object available in transform map scripts that holds the incoming
   * record.
   * @param map Map object available in transform map scripts that holds the current transform
   * map record.
   * @param log Log object available in transform map scripts.
   */
  identifyAndReconcileEnhanced(source: any, map: any, log: any): any;
  /**
   * Logs the number of configuration items (CI) inserted, updated, skipped, or that had
   * errors.
   * @param log Log object available in transform map scripts.
   */
  logTransformStats(log: any): any;
  /**
   * Sets the data source to use when the identifyAndReconcile() or
   * identifyAndReconcileEnhanced() method is called.
   * @param source Data source for the source configuration item record.
   */
  setDataSource(source: string): any;
  /**
   * Sets the payload to use when the identifyAndReconcile() or
   * identifyAndReconcileEnhanced() method is called.
   * @param input Required. Input payload. A JSON formatted string of
   * configuration items to add or update.
   * "input" {
   * "items": [Array],
   * "referenceItems": [Array],
   * "relations": [Array]
   * }
   * @param options Optional, but {} or null must be passed-in. Options to enable
   * or disable features.Note: By default or if partial_payloads is
   * set to true, both partial_commits and
   * deduplicate_payloads are enabled, even if they are set to
   * false, as those features are essential for partial payloads
   * functionality.
   * "options": {
   * "deduplicate_payloads": "Boolean",
   * "generate_summary": "Boolean",
   * "partial_commits": "Boolean",
   * "partial_payloads": "Boolean",
   * "skip_updating_last_scan_to_now": "Boolean",
   * "skip_updating_source_last_discovered_to_now": "Boolean"
   * }
   * @param source Data source of the CI information. This value must be one of
   * the choice values defined for the discovery_source field of the Configuration Item
   * [cmdb_ci] table.
   */
  setPayload(input: string, options: any | undefined, source: string): any;
}
export { CMDBTransformUtil };
