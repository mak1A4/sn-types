[
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>//Example 1: Run a flow with a record-based trigger\n(function startFlowAsync() {\n\n\ttry {\n\t\t// You MUST fetch the GlideRecord that will be passed to the flow\n\t\tvar glideRecordInput = new GlideRecord('sys_user');\n\t\tglideRecordInput.get('62826bf03710200044e0bfc8bcbe5df1');\n\n\t\tvar flowInputs = {};\n\t\tflowInputs['current'] = glideRecordInput;\n\t\tflowInputs['table_name'] = glideRecordInput.getTableName();\n\n\t\tvar result = sn_fd.Flow.startAsync('global.recordtriggeredflow', flowInputs);\n\n\t\t//The Sys ID of a flow execution (contextId)\n\t\tvar contextId = result.contextId;\n\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t}\n\n})();\n\n//Example 2: Run a flow with a schedule-based trigger\n(function startFlowAsync() {\n\n\ttry {\n\t\tvar result = sn_fd.Flow.startAsync('global.scheduletriggeredflow');\n\n\t\t//The Sys ID of a flow execution (contextId)\n\t\tvar contextId = result.contextId;\n\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t}\n\n})();\n\n//Example 3: Run a flow with a Service Catalog trigger\n(function startFlowAsync() {\n\n\ttry {\n\t\t// You MUST fetch the GlideRecord that will be passed to the flow\n\t\tvar glideRecordInput = new GlideRecord('sc_req_item');\n\t\tglideRecordInput.get(aeed229047801200e0ef563dbb9a71c2);\n\n\t\tvar flowInputs = {};\n\t\tflowInputs['request_item'] = glideRecordInput;\n\t\tflowInputs['table_name'] = glideRecordInput.getTableName();\n\n\t\tvar result = sn_fd.Flow.startAsync('global.catalogtriggeredflow', flowInputs);\n\n\t\t//The Sys ID of a flow execution (contextId)\n\t\tvar contextId = result.contextId;\n\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t}\n\n})();\n\n//Example 4: Run a flow with a MetricBase trigger\n(function startMetricBaseFlowAsync() {\n\n\ttry {\n\n\t\tvar oilLevelTriggerRecord = new GlideRecord('oil_levels');\n\t\toilLevelTriggerRecord.get('a4b3622bc72113007b237f48cb97635f');\n\n\t\tvar metricTriggerDefinition = new GlideRecord('sys_metric_trigger_definition');\n\t\tmetricTriggerDefinition.get('21f2eae7c72113007b237f48cb976352');\n\n\t\tvar event_time = oilLevelTriggerRecord.getValue('sys_created_on');\n\t\tvar level = 4;\n\n\t\tvar metricBaseFlowInputs = {};\n\t\t//The record that triggered the metric event\n\t\tmetricBaseFlowInputs['current'] = oilLevelTriggerRecord;\n\t\t//The MetricBase Trigger Definition record\n\t\tmetricBaseFlowInputs['metric'] = metricTriggerDefinition;\n\t\t//The time that the 'record' reached a specific metric event level and triggered this flow\n\t\tmetricBaseFlowInputs['event_time'] = event_time;\n\t\t//The target event level to reach in order for a metric flow to trigger\n\t\tmetricBaseFlowInputs['level'] = level;\n\n\t\tvar result = sn_fd.Flow.startAsync('global.metricbasedtriggeredflow', metricBaseFlowInputs);\n\n\t\t//The Sys ID of a flow execution (contextId)\n\t\tvar contextId = result.contextId;\n\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t}\n\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Object",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "PlanResponse object containing the following properties: <ul class=\"ul\" id=\"FlowScoped-startAsync_S_GR__ul_bd2_k2v_ncb\">\n                  <li class=\"li\">contextId: sys_id of the execution details record for the executed flow.\n                    Access the execution details by navigating to the Flow Executions tab in <span class=\"ph\">Flow Designer</span> and\n                    filtering by sys_id.</li>\n\n                </ul>\n<div class=\"p\">An exception occurs when the flow:<ul class=\"ul\" id=\"FlowScoped-startAsync_S_GR__ul_ub3_n3t_pcb\">\n                    <li class=\"li\">Does not exist within the specified application scope, or the flow or scope\n                      name has been misspelled.</li>\n\n                    <li class=\"li\">Is not activated.</li>\n\n                    <li class=\"li\">Exceeds the recursion limit set by the\n                        <span class=\"keyword parmname\">com.glide.hub.flow_engine.indirect_recursion_limit</span>\n                      system property. The default value is three.</li>\n\n                  </ul>\n</div>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "scopeName.flowName",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The application scope for the flow and the internal name of the flow to run. If\n                scopeName is not included, the scope of the user currently logged in is used.\n                Retrieve the internal name of the flow using the <span class=\"ph uicontrol\">Internal\n                  name</span> column on the <span class=\"ph\">Flow Designer</span> landing\n                page.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "flowInputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs in <code class=\"ph codeph\">&lt;String, Object&gt;</code> format that define\n                record-based flow inputs.<div class=\"p\">To call a flow with a record-based trigger, use the\n                  format:<pre class=\"pre codeblock\"><code>var flowInputs = {};\nflowInputs['current'] = glideRecord;\nflowInputs['table_name'] = glideRecord.getTableName();</code></pre></div>\n<p class=\"p\">The\n                  GlideRecord object must be named 'current'.</p>\n<div class=\"p\">To call a flow with a <span class=\"ph\">Service Catalog</span>\n                  trigger, use the\n                  format:<pre class=\"pre codeblock\"><code>var flowInputs = {};\nflowInputs['request_item'] = glideRecord;\nflowInputs['table_name'] = glideRecord.getTableName();</code></pre></div>\n<p class=\"p\">The\n                  GlideRecord object must be named 'request_item'.</p>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowScoped-startAsync_S_GR",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startAsync(String scopeName.flowName, Map flowInputs)",
        "order": 17270,
        "parentId": "FlowScopedAPI",
        "parent_permalink": "class_namespace__scoped_flow_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Ignores the trigger and runs an activated flow asynchronously.",
        "text2": "<p>Asynchronous calls are non-blocking, allowing the client to execute other code in the\n        script without having to wait for the flow to complete.</p>",
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "FlowScopedAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "Flow",
    "namespace_id": "sn_fd-namespace",
    "release": "sandiego",
    "text": "Runs activated <span class=\"ph\">Flow Designer</span> flows.",
    "text2": "This API is deprecated and replaced by the <a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowAPI\" title=\"Use FlowAPI methods to execute actions, flows, or subflows in server-side scripts using either blocking or non-blocking methods.\">FlowAPI -\n        Scoped, Global</a> and  <a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner - Scoped</a> APIs.<br/><br/>The <span class=\"keyword apiname\">Flow</span> API can only be used in server scripts.<br/><br/>Use the <span class=\"keyword parmname\">sn_fd</span> namespace to access the Flow API.<br/><br/>Before interacting with a flow using the <span class=\"keyword apiname\">Flow</span> API, you must first create\n      and activate the flow in the <span class=\"ph\">Flow Designer</span> interface. Because the\n        <span class=\"keyword apiname\">Flow</span> API only interacts with pre-built flows, there is no constructor for\n      the class.<br/><br/><div class=\"note note\"><span class=\"notetitle\">Note:</span> To optimize instance performance, avoid calling these methods from an asynchronous\n        business rule script. Instead, create a scheduled job record within the <span class=\"ph\">Flow Designer</span> UI.</div>",
    "type": "Server Side Scoped",
    "variable": ""
  },
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "contextId",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Sys_id of the execution details record for the flow, subflow, or action. Access\n                the execution details by navigating to the Flow Executions tab in <span class=\"ph\">Flow Designer</span>, or pass the sys_id of the context record returned by the\n                  <span class=\"keyword apiname\">startFlow()</span>, <span class=\"keyword apiname\">startSubflow()</span>, or\n                  <span class=\"keyword apiname\">startAction()</span> methods.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() { \n\nvar now_GR = new GlideRecord('incident'); \nnow_GR.addQuery('number', 'INC0000050'); \nnow_GR.query(); \nnow_GR.next(); \n\n      try { \n          var inputs = {}; \n          inputs['current'] = now_GR; // GlideRecord of table: \n          inputs['table_name'] = 'incident'; \n\n          // Starts the flow asynchronously.\n          var contextId = sn_fd.FlowAPI.startFlow('global.myFlow', inputs); \n\n      } catch (ex) { \n          var message = ex.getMessage(); \n          gs.error(message); \n      } \n})();\n\n \n// Call the cancel() method using the context Id returned from the startFlow() method\nsn_fd.FlowAPI.cancel(contextId, 'Flow took too long to execute.');</code>",
            "text2": "This  uses the return value of the <span class=\"keyword apiname\">startFlow()</span> method to cancel\n        any long-running flows.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "reason",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Optional. Reason for canceling the flow, subflow, or action. Appears in the\n                  <span class=\"ph uicontrol\">Message</span> field of the Flow engine log entries [sys_flow_log]\n                table.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var now_GR = new GlideRecord(\"sys_flow_context\");\nnow_GR.addQuery(\"name\", \"Test Flow\");\nnow_GR.query();\n\nwhile (now_GR.next()) {\nsn_fd.FlowAPI.cancel(now_GR.getUniqueValue(), 'Canceling Test Flows');\n} </code>",
            "text2": "This  cancels any flows named Test Flow.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-cancel_S_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "cancel(String contextId, String reason)",
        "order": 4810,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Cancels a paused or running flow, subflow, or action.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Object",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The action outputs.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n  try {\n    var inputs = {};\n    inputs['name'] = ; // String \n    inputs['password2'] = ; // Password (2 Way Encrypted) \n\t\t\n    // Execute Synchronously: Run in foreground. Code snippet has access to outputs.\n    // var timeout = ; //timeout in ms\n    //sn_fd.FlowAPI.executeAction('global.actionforpassword2test', inputs, timeout)\n    var outputs = sn_fd.FlowAPI.executeAction('global.actionforpassword2test', inputs);\n\n    // Get Outputs:\n    // Note: outputs can only be retrieved when executing synchronously.\n    var output = outputs['output']; // Password (2 Way Encrypted)\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n})();</code>",
            "text2": "In this , the script uses <span class=\"keyword apiname\">sn_fd.FlowAPI.executeAction</span> to execute\n        an action called actionforpassword2test in the global scope. A variable called inputs\n        contains the inputs for the action. In this case, a name and password. The outputs for the\n        action are stored in the outputs variable, which in this case, is an encrypted password\n        object. The code is wrapped in a try/catch statement to capture any errors that might occur\n        when the flow executes.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The scope and name of the action to be executed, for example\n                  <code class=\"ph codeph\">global.action_name</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define action inputs. Use the input name, not the input\n                label.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "timeout",
            "order": 30,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Number",
            "text2": "<span class=\"ph\">Optional. Timeout in milliseconds. This value overrides the 30\n        second default timeout specified by the\n         <span class=\"keyword parmname\">com.glide.hub.flow_api.default_execution_time</span> system property. After\n        the timeout expires, an exception is thrown.</span>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableFlow-executeAction",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "executeAction(String name, Map inputs, Number timeout)",
        "order": 6490,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs an action from a server-side script synchronously.",
        "text2": "<p>Execute an action from within a business rule, script include, or any other server-side\n        script. Actions run using this method run synchronously, so the method has access to outputs\n        created by the action. Use <span class=\"ph uicontrol\">startAction</span> to run an action\n            asynchronously.<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></div>\n<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This method runs the action as the user who initiates\n          the session.</span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Object",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Object containing outputs defined by the action. You can find the outputs for\n                the action under <span class=\"ph uicontrol\">Outputs</span> in the action outline.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var grIncident = new GlideRecord('incident');\n    grIncident.get('57af7aec73d423002728660c4cf6a71c');\n\n    var inputs = {};\n    inputs['variable'] = grIncident;\n\n    var outputs = sn_fd.FlowAPI.executeActionQuick('global.update_record_test', inputs);\n\n    // Get Outputs:\n    // Note: outputs can only be retrieved when executing synchronously.\n    var output1 = outputs['output1']; \n\n  } catch (ex) { \n    var message = ex.getMessage();\n    gs.error(message);\n    }\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and internal name of the action to execute. For example,\n                  <code class=\"ph codeph\">global.action_name</code>. Locate the <span class=\"ph uicontrol\">Internal\n                  name</span> field in the list of <span class=\"ph\">Flow Designer</span>\n                actions.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define action inputs. You can find the available action\n                inputs and required data types under Inputs in the action outline. Use the input\n                name, not the input label. For example,\n                  <code class=\"ph codeph\">{'table':'incident','sys_id':'a39d8e3cf0212300964feeefe80ff0ed'}</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "timeout",
            "order": 30,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Number",
            "text2": "<p class=\"p\"><span class=\"ph\">Optional. Timeout in milliseconds. This value overrides the 30\n        second default timeout specified by the\n         <span class=\"keyword parmname\">com.glide.hub.flow_api.default_execution_time</span> system property. After\n        the timeout expires, an exception is thrown.</span></p>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-executeActionQuick_S_O_N",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "executeActionQuick(String name, Map inputs, Number timeout)",
        "order": 6500,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Run an action from a server-side script synchronously from the current user session\n    without creating execution details or other related records. Improve performance by eliminating\n    record-keeping overhead. <span class=\"ph\">Use this API to increase the speed of high-volume processing, for\n                example multiple executions per second, in a production environment.</span>",
        "text2": "<p><dl class=\"dl\">\n          \n        <dt class=\"dt dlterm\">Reporting &amp; records generated</dt>\n\n        <dd class=\"dd\">This method does not create execution details and context records, regardless of <span class=\"ph\">Flow Designer</span> settings.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Wait support</dt>\n\n        <dd class=\"dd\"><span class=\"ph\" id=\"FlowAPI-executeActionQuick_S_O_N__d1048e81\">This method does not support pausing the action to wait\n            for conditions. Steps that pause for wait conditions such as Ask for Approval or Wait\n            for Condition are not supported.</span></dd>\n\n      \n          \n        <dt class=\"dt dlterm\">MID Server support</dt>\n\n        <dd class=\"dd\">This method does not support pausing an action to run from a MID Server.</dd>\n\n      \n        </dl></p><p><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "ScriptableDataStream",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "An object used to iterate through items in the data stream. Use the methods in\n                the <span class=\"keyword apiname\">ScriptableDataStream</span> class to interact with this object. See\n                  <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableDataStreamAPI&amp;v=sandiego\" target=\"_blank\">ScriptableDataStream\n                  API</a>.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The scope and name of the Data Stream action to execute. For example,\n                  <code class=\"ph codeph\">global.data_stream_action_name</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n  try {\n\n    // Execute Data Stream Action. \n    var stream = sn_fd.FlowAPI.executeDataStreamAction('x_my_scope.data_stream_name');\n\n    // Process each item in the data stream\n    while (stream.hasNext()) {\n\n      // Get a single item from the data stream.\n      var item = stream.next();\n\n      // Use the item. \n      var now_GR = new GlideRecord('incident');\n      now_GR.setValue('number',item.id);\n      now_GR.setValue('short_description',item.name);\n      now_GR.insert();\n\t\t\n      // By default, this code snippet will terminate after 10 items.\n      // Remove or modify this limit after testing your code.\n      if (stream.getItemIndex() &gt;= 9) {\n        break;\n      }\n    }\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  } finally {\n    stream.close();\n  }\n\t\n})();</code>",
            "text2": "This  creates an incident record for each item returned in the data stream.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define action inputs. Use the input name, not the input\n                label. If the action does not have any inputs, do not include this\n                parameter.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "timeout",
            "order": 30,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Number",
            "text2": "Optional. Amount of time before the action times out. After the timeout\n                expires, an exception is thrown. The timeout only applies to the\n                  <span class=\"keyword apiname\">executeDataStreamAction</span> method, not to methods in the\n                  <span class=\"keyword apiname\">ScriptableDataStream</span> class.<p class=\"p\">Default: 30000, specified by the\n                    <span class=\"keyword parmname\">com.glide.hub.flow_api.default_execution_time</span> system\n                  property</p>\n<p class=\"p\">Unit: Milliseconds</p>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-executeDataStream_S_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "executeDataStreamAction(String name, Map inputs, Number timeout)",
        "order": 6530,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs a Data Stream action synchronously from a server-side script and returns a\n    ScriptableDataStream object.",
        "text2": "<p>For more information about Data Stream actions, see <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/sandiego-application-development/page/administer/integrationhub/concept/data-stream-actions.html\" target=\"_blank\">Data Stream actions and\n          pagination</a>.</p><p><div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></div>\n\n        <div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">Always wrap data stream logic in a\n                  <code class=\"ph codeph\">try/catch</code> block to catch errors. Always include a\n                  <code class=\"ph codeph\">finally</code> statement that ends with the <span class=\"keyword apiname\">close()</span>\n                method from the <span class=\"keyword apiname\">ScriptableDataStream</span> class to close the data\n                stream and prevent performance issues.</span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n    var inputs = {};\n    inputs['current'] = ; // GlideRecord of table:  \n    inputs['table_name'] = 'incident';\n\n    // Execute Synchronously: Run in foreground.\n    // var timeout = ; //timeout in ms\n    //sn_fd.FlowAPI.executeFlow('global.test_flow', inputs, timeout)\n    sn_fd.FlowAPI.executeFlow('global.test_flow', inputs);\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n})();</code>",
            "text2": "This  uses sn_fd.FlowAPI.executeFlow to execute a global flow called test_flow. This\n        flow is normally triggered when a record on the incident table is updated. Because you are\n        activating the flow from a script, you must provide this information. The code creates an\n        inputs variable that contains the current record, and the table for the record. The code is\n        wrapped in a try/catch statement to capture any errors that might occur when the flow\n        executes.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The scope and name of the flow to be executed, for example\n                  <code class=\"ph codeph\">global.flow_name</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "None",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Normal operation produces no return value.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define trigger inputs. Use the input name, not the input\n                label.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Exception",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The API throws an exception when a flow called synchronously pauses.\n                    <code class=\"ph codeph\">The current execution is in the waiting\n                    state</code>. In most cases, the exception is removed when the flow resumes.\n                  However, the API cannot resume a flow that has been sent to a MID\n                  Server.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "timeout",
            "order": 30,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Number",
            "text2": "<span class=\"ph\">Optional. Timeout in milliseconds. This value overrides the 30\n        second default timeout specified by the\n         <span class=\"keyword parmname\">com.glide.hub.flow_api.default_execution_time</span> system property. After\n        the timeout expires, an exception is thrown.</span>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableFlow-executeFlow",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "executeFlow(String name, Map inputs, Number timeout)",
        "order": 6540,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs a flow from a server-side script synchronously.",
        "text2": "<p>Execute a flow from within a business rule, script include, or any other server-side\n        script. Flows run using this method run synchronously. Use <span class=\"ph uicontrol\">startFlow</span>\n        to run a flow asynchronously.<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></div>\n<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This method runs the flow as the user specified in flow\n          properties.</span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n  try {\n    var grIncident = new GlideRecord('incident');\n    grIncident.get('ed92e8d173d023002728660c4cf6a7bc');\n\n    var inputs = {};\n    inputs['current'] = grIncident;\n    inputs['table_name'] = 'incident';\n\t\t\n    sn_fd.FlowAPI.executeFlowQuick('global.test_quick_flow', inputs);\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n\t}\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and internal name of the flow to execute. For example,\n                  <code class=\"ph codeph\">global.flow_name</code>. Locate the <span class=\"ph uicontrol\">Internal name</span>\n                field in the list of <span class=\"ph\">Flow Designer</span>\n                flows.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define trigger inputs. You can find the available trigger\n                inputs and required data types in the Trigger section of the flow. Use the input\n                name, not the input label. For example,\n                  <code class=\"ph codeph\">{'table':'incident','sys_id':'a39d8e3cf0212300964feeefe80ff0ed'}</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "timeout",
            "order": 30,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Number",
            "text2": "<span class=\"ph\">Optional. Timeout in milliseconds. This value overrides the 30\n        second default timeout specified by the\n         <span class=\"keyword parmname\">com.glide.hub.flow_api.default_execution_time</span> system property. After\n        the timeout expires, an exception is thrown.</span>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-executeFlowQuick_S_O_N",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "executeFlowQuick(String name, Map inputs, Number timeout)",
        "order": 6550,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "<span class=\"ph\">Runs a flow, subflow, action, or Data\n                    Stream action from a server-side script synchronously or asynchronously without\n                    creating execution details or other related records. Improves performance by\n                    eliminating record-keeping overhead.</span>\n    <span class=\"ph\">Use this API to increase the speed of high-volume processing, for\n                example multiple executions per second, in a production environment.</span>",
        "text2": "<p><dl class=\"dl\">\n          \n        <dt class=\"dt dlterm\">Reporting &amp; records generated</dt>\n\n        <dd class=\"dd\">This method does not create execution details and context records, regardless of <span class=\"ph\">Flow Designer</span> settings.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Run as user</dt>\n\n        <dd class=\"dd\">This method runs the flow as the user who initiates the session. Setting the flow to run\n          as the system user, or impersonating a user, is not supported.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Wait support</dt>\n\n        <dd class=\"dd\">This method does not support pausing the flow to wait for conditions. Actions or flow\n          logic that pause for wait conditions such as Ask for Approval, Wait for Condition, or Wait\n          for a duration are not supported.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">MID Server support</dt>\n\n        <dd class=\"dd\">This method does not support pausing a flow to run from a MID Server.</dd>\n\n      \n        </dl></p><p><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Object",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Object containing the subflow outputs.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n(function() {\n\t\n\ttry {\n\t\tvar inputs = {};\n\t\tinputs['name'] = ; // String \n\t\tinputs['password2'] = ; // Password (2 Way Encrypted) \n\t\t\n\t\t// Execute Synchronously: Run in foreground.\n\t\t// var timeout = ; //timeout in ms\n              //sn_fd.FlowAPI.executeSubflow('global.subflowTest', inputs, timeout)\n              var outputs = sn_fd.FlowAPI.executeSubflow('global.subflowTest', inputs);\n\t\t\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t}\t\n})();</code>",
            "text2": "In this , the script uses sn_fd.FlowAPI.executeSubflow to execute an subflow called\n        subflowTest in the global scope. A variable called inputs contains the inputs for the\n        subflow. In this case, a name and password. The code is wrapped in a try/catch statement to\n        capture any errors that might occur when the flow executes.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The scope and name of the subflow to be executed, for example\n                  <code class=\"ph codeph\">global.subflow_name</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define subflow inputs. Use the input name, not the input\n                label.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Exception",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The API throws an exception when a flow called synchronously pauses.\n                    <code class=\"ph codeph\">The current execution is in the waiting\n                    state</code>. In most cases, the exception is removed when the flow resumes.\n                  However, the API cannot resume a flow that has been sent to a MID\n                  Server.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "timeout",
            "order": 30,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Number",
            "text2": "<span class=\"ph\">Optional. Timeout in milliseconds. This value overrides the 30\n        second default timeout specified by the\n         <span class=\"keyword parmname\">com.glide.hub.flow_api.default_execution_time</span> system property. After\n        the timeout expires, an exception is thrown.</span>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableFlow-executeSubflow",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "executeSubflow(String name, Map inputs, Number timeout)",
        "order": 6570,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs an subflow from a server-side script synchronously.",
        "text2": "<p>Execute a subflow from within a business rule, script include, or any other server-side\n        script. Subflows run using this method run synchronously. Use\n          <span class=\"ph uicontrol\">startSubflow</span> to run an subflow asynchronously.<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></div>\n<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This method runs the flow as the user specified in flow\n          properties.</span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and internal name of the subflow to execute. For example,\n                  <code class=\"ph codeph\">global.subflow_name</code>. Locate the <span class=\"ph uicontrol\">Internal\n                  name</span> field in the list of <span class=\"ph\">Flow Designer</span>\n                subflows.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\n  try {\n    var grIncident = new GlideRecord('incident');\n    grIncident.get('57af7aec73d423002728660c4cf6a71c');\n\n    var inputs = {};\n    inputs['variable'] = grIncident;\n\n    var outputs = sn_fd.FlowAPI.executeSubflowQuick('global.test_quick_run_subflow', inputs);\n\n    // Get Outputs:\n    // Note: outputs can only be retrieved when executing synchronously.\n    var output1 = outputs['output1']; \n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n    }\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Object",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Object containing outputs defined by the subflow. You can find the outputs for\n                the subflow under <span class=\"ph uicontrol\">Subflow Inputs &amp; Outputs</span> in the subflow\n                outline.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define subflow inputs. You can find the available subflow\n                inputs and required data types under Inputs in the subflow. Use the input name, not\n                the input label. For example,\n                  <code class=\"ph codeph\">{'table':'incident','sys_id':'a39d8e3cf0212300964feeefe80ff0ed'}</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "timeout",
            "order": 30,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Number",
            "text2": "<span class=\"ph\">Optional. Timeout in milliseconds. This value overrides the 30\n        second default timeout specified by the\n         <span class=\"keyword parmname\">com.glide.hub.flow_api.default_execution_time</span> system property. After\n        the timeout expires, an exception is thrown.</span>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-executeSubflowQuick_S_O_N",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "executeSubflowQuick(String name, Map inputs, Number timeout)",
        "order": 6580,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Run a subflow from a server-side script synchronously from the current user session\n    without creating execution details or other related records. Improve performance by eliminating\n    record-keeping overhead. <span class=\"ph\">Use this API to increase the speed of high-volume processing, for\n                example multiple executions per second, in a production environment.</span>",
        "text2": "<p><dl class=\"dl\">\n          \n        <dt class=\"dt dlterm\">Reporting &amp; records generated</dt>\n\n        <dd class=\"dd\">This method does not create execution details and context records, regardless of <span class=\"ph\">Flow Designer</span> settings.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Run as user</dt>\n\n        <dd class=\"dd\">This method runs the flow as the user who initiates the session. Setting the flow to run\n          as the system user, or impersonating a user, is not supported.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Wait support</dt>\n\n        <dd class=\"dd\">This method does not support pausing the flow to wait for conditions. Actions or flow\n          logic that pause for wait conditions such as Ask for Approval, Wait for Condition, or Wait\n          for a duration are not supported.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">MID Server support</dt>\n\n        <dd class=\"dd\">This method does not support pausing a flow to run from a MID Server.</dd>\n\n      \n        </dl></p><p><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Object",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Object containing the action or subflow outputs.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "contextId",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The sys_id of the action or subflow whose outputs you want to get.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\n  try {\n    // Gather inputs to call flow\n    var inputs = {};\n    inputs['ah_task'] = myTaskRecord; // GlideRecord of table: task\n    inputs['ah_comment'] ='Test Comment' ; // String\n\n    // Call flow\n    var contextId = sn_fd.FlowAPI.startSubflow('global.test_subflow', inputs);\n\n    // Wait for the flow to finish running\n\n    // Get flow outputs\n    var outputs = sn_fd.FlowAPI.getOutputs(contextId);\n    var output1 = outputs['output1'];\n    return output1;\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n})();\n</code>",
            "text2": "This  starts a global subflow called test_subflow, waits for the flow to finish, and\n        then gets its output values. Normally, a single script does not both run a flow and then get\n        its output values. Since a flow may not complete before the <span class=\"keyword apiname\">getOutputs()</span>\n        call, this example uses a wait time. Typically, either another script or <span class=\"ph\">Flow Designer</span> would have already run the flow. The code is wrapped in a\n        try/catch statement to capture any errors that might occur when the flow executes.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-getOutputs_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "getOutputs(String contextId)",
        "order": 10050,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the outputs of a completed action or subflow.",
        "text2": "<p>You can use the return values from either the\n          <span class=\"keyword apiname\">startAction()</span>\n          or<span class=\"keyword apiname\">startSubflow()</span>\n        methods as the contextId parameter.<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n(function() {\n  try {\n\n    var inputs = {}; \n\n    inputs['sys_id'] = '57af7aec73d423002728660c4cf6a71c';  // Pass the record’s sys_id in as input.  \n\n    var result = sn_fd.FlowAPI.getRunner()  // Create a ScriptableFlowRunner builder object.\n      .action('global.markapproved')        // Run the global scope action named markapproved.\n      .inForeground()\n      .inDomain('TOP/ACME')                 // Run the action from the TOP/ACME domain.                               \n      .withInputs(inputs)\n      .run();                               // Run the action and return a FlowRunnerResult object.\n\n    var contextId = result.getContextId();  // Retrieve the context ID from the result\n    var dateRun = result.getDate();\n    var domainUsed = result.getDomainId();  // Retrieve the Domain ID from the result.\n    var flowName = result.getFlowObjectName();\n    var flowObjectType = result.getFlowObjectType();\n\n    var outputs = result.getOutputs();            // Retrieve any outputs from the action execution.\n    var newApprovalStatus = outputs['approval'];  // Echo back the approval status for verification.\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\t\n})();\n   </code>",
            "text2": "This  runs a flow synchronously.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-getRunner",
        "hasExample": true,
        "hasReturn": true,
        "name": "getRunner()",
        "order": 10870,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns a <span class=\"keyword apiname\">ScriptableFlowRunner</span> builder object for a flow or action\n    that you want to run.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n  try {\n    var result = sn_fd.FlowAPI.hasApprovals('global.example_flow');\n    gs.log('Result: ' + result);\n  }\n\n  catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n})();</code>",
            "text2": "The following  checks if the <span class=\"keyword apiname\">example_flow</span> flow within the\n          <span class=\"keyword apiname\">global</span> scope contains any Ask for Approval actions and logs the result.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Returns one of the following string values:<ul class=\"ul\" id=\"FlowAPI-hasApprovals_S__ul_fx1_fdf_vlb\">\n                  <li class=\"li\">ALWAYS: The flow contains an Ask for Approval action that isn't nested within\n                    a conditional <code class=\"ph codeph\">If</code> flow logic block.</li>\n\n                  <li class=\"li\">CONDITIONALLY: The flow contains an Ask for Approval action that is nested\n                    within a conditional <code class=\"ph codeph\">If</code> flow logic block.</li>\n\n                  <li class=\"li\">NO: The flow doesn't contain any Ask for Approval actions.</li>\n\n                  <li class=\"li\">UNKNOWN: There was a compiler error, and the system can't determine whether\n                    the flow contains any Ask for Approval actions.</li>\n\n                </ul>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "scopedFlowName",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and internal name of the flow to execute. For example,\n                  <code class=\"ph codeph\">global.flow_name</code>. Locate the <span class=\"ph uicontrol\">Internal name</span>\n                field in the list of <span class=\"ph\">Flow Designer</span> flows.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-hasApprovals_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "hasApprovals(String scopedFlowName)",
        "order": 12030,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Checks if a flow within a give scope contains any Ask for Approval actions.",
        "text2": "<p>The <span class=\"keyword apiname\">hasApprovals()</span> method determines if a flow within a given scope\n        contains any Ask for Approval actions. This method also checks if any Ask for Approval\n        actions within the flow are nested under If flow logic blocks. For more information, see\n          <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/sandiego-application-development/page/administer/flow-designer/reference/ask-approval-flow-designer.html\" target=\"_blank\">Ask for Approval actions</a>.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function execute(inputs, outputs) {\n  // ...code...\n  var now_GR = new GlideRecord('sys_user');\n  now_GR.addQuery('first_name' , 'Abel');\n  now_GR.query();\n  now_GR.next();\n  var pwVal = now_GR.getValue('pw2');\n  outputs['usedSetEncrypted'] = sn_fd.GlideActionUtil.setEncryptedOutput(pwVal);\n  outputs['justSetDirectly'] = pwVal;\n})(inputs, outputs);</code>",
            "text2": "This  returns value of a password2 field from a user record and stores in in a\n        variable. This variable is passed into the setEncryptedOutput method, which is called using\n        sn_fd.GlideActionUtil.setEncryptedOutput. The instance recognises the returned value as a\n        password.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Encrypted password2 value, recognised by the engine as a password\n                value.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "password",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Encrypted password2 value.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableFlow-glideActionUtil-setEncryptedOutput",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "setEncryptedOutput(String password)",
        "order": 15330,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Builds password2 values inside a script step.",
        "text2": "<p>Identify an encrypted password2 value returned from a GlideRecord, enabling the system to\n        display the value as a masked password rather than an encrypted string.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n    var inputs = {};\n    inputs['ah_task'] = myTaskRecord; // GlideRecord of table: task \n    inputs['ah_comment'] ='Test Comment' ; // String \n\n    var contextId = sn_fd.FlowAPI.startAction('sn_itsm_spoke.add_comment', inputs);\t\n\t\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n})();</code>",
            "text2": "This  uses sn_fd.FlowAPI.startAction to execute an action called add_comment in the\n        sn_itsm_spoke scope. The inputs object contains a target record and a comment to add to that\n        record. The code is wrapped in a try/catch statement to capture any errors that might occur\n        when the flow executes.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Sys Id of the context record for the action. Access the context record by\n                navigating to the Flow Executions tab in <span class=\"ph\">Flow Designer</span>, selecting a\n                flow execution, and clicking <span class=\"ph uicontrol\">Open Context Record</span>.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The scope and name of the action to be executed, for example\n                  <code class=\"ph codeph\">global.action_name</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define action inputs. Use the input name, not the input\n                label.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableFlow-startAction",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startAction(String name, Map inputs)",
        "order": 17230,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs an action from a server-side script asynchronously.",
        "text2": "<p>Execute an action from within a business rule, script include, or any other server-side\n        script. Actions run using this method run asynchronously, so scripts using this method do\n        not have access to any outputs created by the action. Use\n          <span class=\"ph uicontrol\">executeAction</span> to run an action synchronously and access the outputs\n        it generates.<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></div>\n<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This method runs the action as the user who initiates\n          the session.</span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n  try {\n    var grIncident = new GlideRecord('incident');\n    grIncident.get('57af7aec73d423002728660c4cf6a71c');\n\n    var inputs = {};\n    inputs['variable'] = grIncident;\n\n    sn_fd.FlowAPI.startActionQuick('global.update_record_test', inputs);\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n    }\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and internal name of the action to execute. For example,\n                  <code class=\"ph codeph\">global.action_name</code>. Locate the <span class=\"ph uicontrol\">Internal\n                  name</span> field in the list of <span class=\"ph\">Flow Designer</span>\n                actions.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define action inputs. You can find the available action\n                inputs and required data types under Inputs in the action outline. Use the input\n                name, not the input label. For example,\n                  <code class=\"ph codeph\">{'table':'incident','sys_id':'a39d8e3cf0212300964feeefe80ff0ed'}</code>.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-startActionQuick_S_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startActionQuick(String name, Map inputs)",
        "order": 17240,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs an action from a server-side script asynchronously without creating execution\n    details or other related records. Improve performance by eliminating record-keeping overhead.\n      <span class=\"ph\">Use this API to increase the speed of high-volume processing, for\n                example multiple executions per second, in a production environment.</span>",
        "text2": "<p><dl class=\"dl\">\n          \n        <dt class=\"dt dlterm\">Reporting &amp; records generated</dt>\n\n        <dd class=\"dd\">This method does not create execution details and context records, regardless of <span class=\"ph\">Flow Designer</span> settings.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Wait support</dt>\n\n        <dd class=\"dd\"><span class=\"ph\" id=\"FlowAPI-startActionQuick_S_O__d1048e81\">This method does not support pausing the action to wait\n            for conditions. Steps that pause for wait conditions such as Ask for Approval or Wait\n            for Condition are not supported.</span></dd>\n\n      \n          \n        <dt class=\"dt dlterm\">MID Server support</dt>\n\n        <dd class=\"dd\">This method does not support pausing an action to run from a MID Server.</dd>\n\n      \n        </dl></p><p><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The scope and name of the flow to be executed, for example\n                  <code class=\"ph codeph\">global.flow_name</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n \n  var now_GR = new GlideRecord('incident'); \n  now_GR.addQuery('number', 'INC0009009'); \n  now_GR.query(); \n  now_GR.next();\n\n  try {\n    var inputs = {};\n    inputs['current'] = now_GR; // GlideRecord of table: Incident\n    inputs['table_name'] = 'incident';\n\n    var contextId = sn_fd.FlowAPI.startFlow('global.test_flow', inputs);\t\n\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);  \n  }\n})();</code>",
            "text2": "This  uses sn_fd.FlowAPI.startFlow to execute a global flow called test_flow. The\n        code creates an inputs variable that contains inputs required by the flow. In this case, the\n        current record and the table for the record. The code is wrapped in a try/catch statement to\n        capture any errors that might occur when the flow executes.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Sys Id of the context record for the flow. Access the context record by\n                navigating to the Flow Executions tab in <span class=\"ph\">Flow Designer</span>, selecting a\n                flow execution, and clicking <span class=\"ph uicontrol\">Open Context Record</span>.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define trigger inputs. Use the input name, not the input\n                label.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableFlow-startFlow",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startFlow(String name, Map inputs)",
        "order": 17310,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs a flow from a server-side script.",
        "text2": "<p>Execute a flow from within a business rule, script include, or any other server-side\n        script. Flows executed with this method run asynchronously.<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></div>\n<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This method runs the flow as the user specified in flow\n          properties.</span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and internal name of the flow to execute. For example,\n                  <code class=\"ph codeph\">global.flow_name</code>. Locate the <span class=\"ph uicontrol\">Internal name</span>\n                field in the list of <span class=\"ph\">Flow Designer</span>\n                flows.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n  try {\n    var grIncident = new GlideRecord('incident');\n    grIncident.get('ed92e8d173d023002728660c4cf6a7bc');\n\n    var inputs = {};\n    inputs['current'] = grIncident;\n    inputs['table_name'] = 'incident';\n\t\t\n    sn_fd.FlowAPI.startFlowQuick('global.test_quick_flow', inputs);\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n\t}\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define trigger inputs. You can find the available trigger\n                inputs and required data types in the Trigger section of the flow. Use the input\n                name, not the input label. For example,\n                  <code class=\"ph codeph\">{'table':'incident','sys_id':'a39d8e3cf0212300964feeefe80ff0ed'}</code>.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-startFlowQuick_S_O_N",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startFlowQuick(String name, Map inputs)",
        "order": 17320,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs a flow from a server-side script asynchronously without creating execution details\n    or other related records. Improve performance by eliminating record-keeping overhead. <span class=\"ph\">Use this API to increase the speed of high-volume processing, for\n                example multiple executions per second, in a production environment.</span>",
        "text2": "<p><dl class=\"dl\">\n          \n        <dt class=\"dt dlterm\">Reporting &amp; records generated</dt>\n\n        <dd class=\"dd\">This method does not create execution details and context records, regardless of <span class=\"ph\">Flow Designer</span> settings.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Run as System user</dt>\n\n        <dd class=\"dd\">This method runs the flow as the System user. Setting the flow to run as the user who\n          initiates the session, or impersonating a user, is not supported.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Wait support</dt>\n\n        <dd class=\"dd\">This method does not support pausing the flow to wait for conditions. Actions or flow\n          logic that pause for wait conditions such as Ask for Approval, Wait for Condition, or Wait\n          for a duration are not supported.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">MID Server support</dt>\n\n        <dd class=\"dd\">This method does not support pausing a flow to run from a MID Server.</dd>\n\n      \n        </dl></p><p><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n    var inputs = {};\n    inputs['ah_task'] = myTaskRecord; // GlideRecord of table: task \n    inputs['ah_comment'] ='Test Comment' ; // String \n\n    var contextId = sn_fd.FlowAPI.startSubflow('global.test_subflow', inputs);\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\t\n})();</code>",
            "text2": "This  uses <span class=\"keyword apiname\">sn_fd.FlowAPI.startSubflow</span> to execute a global flow\n        called test_subflow. The code is wrapped in a try/catch statement to capture any errors that\n        might occur when the flow executes.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Sys Id of the context record for the subflow. Access the context record by\n                navigating to the Flow Executions tab in <span class=\"ph\">Flow Designer</span>, selecting a\n                flow execution, and clicking <span class=\"ph uicontrol\">Open Context Record</span>.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The scope and name of the subflow to be executed, for example\n                  <code class=\"ph codeph\">global.subflow_name</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define subflow inputs. Use the input name, not the input\n                label.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableFlow-startSubFlow",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startSubflow(String name, Map input)",
        "order": 17340,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs a subflow from a server-side script.",
        "text2": "<p>Execute a subflow from within a business rule, script include, or any other server-side\n        script. Subflows run using this method run asynchronously Scripts that include this method\n        do not have access to outputs created by the flow. Use <span class=\"ph uicontrol\">executeSubflow</span>\n        to run a subflow synchronously and access the outputs it generates.<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></div>\n<div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This method runs the flow as the user specified in flow\n          properties.</span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and internal name of the subflow to execute. For example,\n                  <code class=\"ph codeph\">global.subflow_name</code>. Locate the <span class=\"ph uicontrol\">Internal\n                  name</span> field in the list of <span class=\"ph\">Flow Designer</span>\n                subflows.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\n  try {\n    var grIncident = new GlideRecord('incident');\n    grIncident.get('57af7aec73d423002728660c4cf6a71c');\n\n    var inputs = {};\n    inputs['variable'] = grIncident;\n\n    sn_fd.FlowAPI.startSubflowQuick('global.test_quick_run_subflow', inputs);\n\n  } catch (ex) {\n    var message = ex.getMessage();  \n    gs.error(message);\n    }\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define subflow inputs. You can find the available subflow\n                inputs and required data types under Inputs in the subflow. Use the input name, not\n                the input label. For example,\n                  <code class=\"ph codeph\">{'table':'incident','sys_id':'a39d8e3cf0212300964feeefe80ff0ed'}</code>.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowAPI-startSubflowQuick_S_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startSubflowQuick(String name, Map inputs)",
        "order": 17350,
        "parentId": "ScriptableFlowAPI",
        "parent_permalink": "class_namespace__scoped_flowapi___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs a subflow from a server-side script asynchronously without creating execution\n    details or other related records. Improve performance by eliminating record-keeping overhead.\n      <span class=\"ph\">Use this API to increase the speed of high-volume processing, for\n                example multiple executions per second, in a production environment.</span>",
        "text2": "<p><dl class=\"dl\">\n          \n        <dt class=\"dt dlterm\">Reporting &amp; records generated</dt>\n\n        <dd class=\"dd\">This method does not create execution details and context records, regardless of <span class=\"ph\">Flow Designer</span> settings.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Run as System user</dt>\n\n        <dd class=\"dd\">This method runs the flow as the System user. Setting the flow to run as the user who\n          initiates the session, or impersonating a user, is not supported.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Wait support</dt>\n\n        <dd class=\"dd\">This method does not support pausing the flow to wait for conditions. Actions or flow\n          logic that pause for wait conditions such as Ask for Approval, Wait for Condition, or Wait\n          for a duration are not supported.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">MID Server support</dt>\n\n        <dd class=\"dd\">This method does not support pausing a flow to run from a MID Server.</dd>\n\n      \n        </dl></p><p><span class=\"notetitle\">Note:</span> <span class=\"ph\">This API is replaced by <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowRunnerScopedAPI&amp;v=rome\" target=\"_blank\">ScriptableFlowRunner</a>,\n                which deprecates the existing methods used to build objects and execute <span class=\"ph\">Flow Designer</span> flows and actions. Use the <span class=\"keyword apiname\">getRunner()</span>\n                method in the <span class=\"keyword apiname\">FlowAPI</span> class to return a ScriptableFlowRunner\n                object and use the associated methods. Use the\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> methods if you need to support domain\n                separation.</span></p>",
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "ScriptableFlowAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "FlowAPI - Scoped, Global",
    "namespace_id": "sn_fd-namespace",
    "release": "sandiego",
    "text": "Use <span class=\"keyword apiname\">FlowAPI</span> methods to execute actions, flows, or subflows in\n    server-side scripts using either blocking or non-blocking methods.",
    "text2": "Access <span class=\"keyword apiname\">FlowAPI</span> methods in global and scoped scripts using the\n        <code class=\"ph codeph\">sn_fd.FlowAPI</code> object. Create calls to your flows using the <span class=\"ph uicontrol\">Code\n        Snippet</span> action in Flow Designer, or use the methods detailed here to update\n      scripts manually.<br/><br/><div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">In domain separated instances, flows, subflows, and\n        actions triggered by this API run in the domain of the user who started the script. For\n        example, if a user in the Acme domain starts a script that triggers a flow, the flow runs in\n        the Acme domain and can only access Acme data, even if the flow runs as the System User.\n       </span></div><br/><br/><div class=\"note note\"><span class=\"notetitle\">Note:</span> To optimize instance performance, avoid calling these methods from an asynchronous\n        business rule script. Instead, create a scheduled job record within the <span class=\"ph\">Flow Designer</span> UI.</div>",
    "type": "Server Side Scoped",
    "variable": ""
  },
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n\ttry {\n​\n\t\t// Execute Data Stream Action. \n\t\tvar stream = sn_fd.FlowAPI.executeDataStreamAction('x_snc_my_scope.data_stream_name');\n​\n\t\t// Process each item in the data stream\n\t\twhile (stream.hasNext()) {\n​\n\t\t\t// Get a single item from the data stream.\n\t\t\tvar user = stream.next();\n\t\t\n\t\t\t// Only log the first item in each page\n\t\t\tif (stream.getItemInPageIndex() == 0) {\n\t\t\t\tgs.info('first user on page is ' + user.name);\n\t\t\t}\n\t\t}\t\t\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t} finally {\n\t\tstream.close();\n\t}\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableDS-close",
        "hasExample": true,
        "hasReturn": true,
        "name": "close()",
        "order": 5130,
        "parentId": "ScriptableDataStreamAPI",
        "parent_permalink": "class_namespace__scoped_scriptabledatastream___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Closes the connection to a data stream. Always call this method after performing any\n    desired operations on a data stream.",
        "text2": "<p><span class=\"ph\">You can only call this method on a\n                ScriptableDataStream object returned from the\n                  <span class=\"keyword apiname\">executeDataStreamAction()</span> method in the FlowAPI class. See\n                  <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowAPI&amp;v=rome\" target=\"_blank\">FlowAPI</a>.</span></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n\ttry {\n\n\t\t// Execute Data Stream Action. \n\t\tvar stream = sn_fd.FlowAPI.executeDataStreamAction('x_my_scope.data_stream_name');\n\n\t\t// Process each item in the data stream\n\t\twhile (stream.hasNext()) {\n\n\t\t\t// Get a single item from the data stream.\n\t\t\tvar User = stream.next();\n\n\t\t\t// Use the item. Example:\n\t\t\t// var now_GR = new GlideRecord(&lt;table_name&gt;);\n\t\t\t// now_GR.&lt;field_name&gt; = User.&lt;field_name&gt;;\n\t\t\t// now_GR.insert();\n\t\t\n\t\t\t// By default, this code snippet will terminate after 10 items.\n\t\t\t// Remove or modify this limit after your code has been tested.\n\t\t\tif (stream.getItemIndex() &gt;= 9) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\t\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t} finally {\n\t\tstream.close();\n\t}\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Number",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Current index of an item in a data stream using zero-based indexing.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableDS-getItemIndex",
        "hasExample": true,
        "hasReturn": true,
        "name": "getItemIndex()",
        "order": 9420,
        "parentId": "ScriptableDataStreamAPI",
        "parent_permalink": "class_namespace__scoped_scriptabledatastream___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the current index of an item in a data stream.",
        "text2": "<p><span class=\"ph\">You can only call this method on a\n                ScriptableDataStream object returned from the\n                  <span class=\"keyword apiname\">executeDataStreamAction()</span> method in the FlowAPI class. See\n                  <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowAPI&amp;v=rome\" target=\"_blank\">FlowAPI</a>.</span></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n\ttry {\n​\n\t\t// Execute Data Stream Action. \n\t\tvar stream = sn_fd.FlowAPI.executeDataStreamAction('x_snc_my_scope.data_stream_name');\n​\n\t\t// Process each item in the data stream\n\t\twhile (stream.hasNext()) {\n​\n\t\t\t// Get a single item from the data stream.\n\t\t\tvar user = stream.next();\n\t\t\n\t\t\t// Only log the first item in each page\n\t\t\tif (stream.getItemInPageIndex() == 0) {\n\t\t\t\tgs.info('first user on page is ' + user.name);\n\t\t\t}\n\t\t}\t\t\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t} finally {\n\t\tstream.close();\n\t}\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Number",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Current index of an item within the current page in the data stream using\n                zero-based indexing.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableDS-getItemInPageIndex",
        "hasExample": true,
        "hasReturn": true,
        "name": "getItemInPageIndex()",
        "order": 9430,
        "parentId": "ScriptableDataStreamAPI",
        "parent_permalink": "class_namespace__scoped_scriptabledatastream___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the current index of an item within the current page in a data\n    stream.",
        "text2": "<p><span class=\"ph\">You can only call this method on a\n                ScriptableDataStream object returned from the\n                  <span class=\"keyword apiname\">executeDataStreamAction()</span> method in the FlowAPI class. See\n                  <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowAPI&amp;v=rome\" target=\"_blank\">FlowAPI</a>.</span></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n\ttry {\n\n\t\t// Execute Data Stream Action. \n\t\tvar stream = sn_fd.FlowAPI.executeDataStreamAction('x_my_scope.data_stream_name');\n\n\t\t// Process each item in the data stream\n\t\twhile (stream.hasNext()) {\n\n\t\t\t// Get a single item from the data stream.\n\t\t\tvar item = stream.next();\n\n\t\t\t// Use the item. \n\t\t\tvar now_GR = new GlideRecord('incident');\n\t\t\tnow_GR.setValue('number',item.id);\n\t\t\tnow_GR.setValue('short_description',item.name);\n\t\t\tnow_GR.insert();\n\t\t\n\t\t\t// By default, this code snippet will terminate after 5 pages.\n\t\t\t// Remove or modify this limit after testing your code.\n\t\t\tif (stream.getPageIndex() &gt;= 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\t\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t} finally {\n\t\tstream.close();\n\t}\n\t\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Number",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Current index of a page in a data stream using zero-based indexing.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableDS-getPageIndex",
        "hasExample": true,
        "hasReturn": true,
        "name": "getPageIndex()",
        "order": 10080,
        "parentId": "ScriptableDataStreamAPI",
        "parent_permalink": "class_namespace__scoped_scriptabledatastream___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the current index of a page in a data stream.",
        "text2": "<p><span class=\"ph\">You can only call this method on a\n                ScriptableDataStream object returned from the\n                  <span class=\"keyword apiname\">executeDataStreamAction()</span> method in the FlowAPI class. See\n                  <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowAPI&amp;v=rome\" target=\"_blank\">FlowAPI</a>.</span></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n\ttry {\n\n\t\t// Execute Data Stream Action. \n\t\tvar stream = sn_fd.FlowAPI.executeDataStreamAction('x_my_scope.data_stream_name');\n\n\t\t// Process each item in the data stream\n\t\twhile (stream.hasNext()) {\n\n\t\t\t// Get a single item from the data stream.\n\t\t\tvar item = stream.next();\n\n\t\t\t// Use the item. \n\t\t\tvar now_GR = new GlideRecord('incident');\n\t\t\tnow_GR.setValue('number',item.id);\n\t\t\tnow_GR.setValue('short_description',item.name);\n\t\t\tnow_GR.insert();\n\t\t\n\t\t\t// By default, this code snippet will terminate after 10 items.\n\t\t\t// Remove or modify this limit after testing your code.\n\t\t\tif (stream.getItemIndex() &gt;= 9) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\t\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t} finally {\n\t\tstream.close();\n\t}\n\t\n})();</code>",
            "text2": "This  creates an incident record for each item returned in the data stream.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Boolean",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Flag that determines whether there are more items in the data stream. Values\n                  include:<ul class=\"ul\" id=\"ScriptableDS-hasNext__ul_xy5_z4d_cjb\">\n                  <li class=\"li\">true: There are more items to iterate through in the data stream.</li>\n\n                  <li class=\"li\">false: There are no more items in the data stream.</li>\n\n                </ul>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableDS-hasNext",
        "hasExample": true,
        "hasReturn": true,
        "name": "hasNext()",
        "order": 12130,
        "parentId": "ScriptableDataStreamAPI",
        "parent_permalink": "class_namespace__scoped_scriptabledatastream___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns true if there are more items in the data stream.",
        "text2": "<p><span class=\"ph\">You can only call this method on a\n                ScriptableDataStream object returned from the\n                  <span class=\"keyword apiname\">executeDataStreamAction()</span> method in the FlowAPI class. See\n                  <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowAPI&amp;v=rome\" target=\"_blank\">FlowAPI</a>.</span></p><p><div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">By default, the instance waits for 600 seconds to\n                  retrieve a single page of data from a <span class=\"ph\">MID Server</span>. If you\n                  encounter a timeout when running a <span class=\"ph\">Data Stream</span> action through a <span class=\"ph\">MID Server</span>, change this default by increasing the\n                    <span class=\"keyword parmname\">datastream_alternative_env_fetch_page_timeout_seconds</span>\n                  system property. </span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n\t\n\ttry {\n\n\t\t// Execute Data Stream Action. \n\t\tvar stream = sn_fd.FlowAPI.executeDataStreamAction('x_my_scope.data_stream_name');\n\n\t\t// Process each item in the data stream\n\t\twhile (stream.hasNext()) {\n\n\t\t\t// Get a single item from the data stream.\n\t\t\tvar item = stream.next();\n\n\t\t\t// Use the item. \n\t\t\tvar now_GR = new GlideRecord('incident');\n\t\t\tnow_GR.setValue('number',item.id);\n\t\t\tnow_GR.setValue('short_description',item.name);\n\t\t\tnow_GR.insert();\n\t\t\n\t\t\t// By default, this code snippet will terminate after 10 items.\n\t\t\t// Remove or modify this limit after testing your code.\n\t\t\tif (stream.getItemIndex() &gt;= 9) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\t\t\n\t} catch (ex) {\n\t\tvar message = ex.getMessage();\n\t\tgs.error(message);\n\t} finally {\n\t\tstream.close();\n\t}\n\t\n})();</code>",
            "text2": "This  creates an incident record for each item returned in the data stream.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Object",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The next item in the data stream. This object contains the outputs defined by\n                the Data Stream action. To view the Data Stream action outputs, navigate to the\n                Outputs section of the Data Stream action in the Flow Designer interface.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "ScriptableDS-next",
        "hasExample": true,
        "hasReturn": true,
        "name": "next()",
        "order": 13490,
        "parentId": "ScriptableDataStreamAPI",
        "parent_permalink": "class_namespace__scoped_scriptabledatastream___scoped__global_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the next item in a data stream.",
        "text2": "<p><span class=\"ph\">You can only call this method on a\n                ScriptableDataStream object returned from the\n                  <span class=\"keyword apiname\">executeDataStreamAction()</span> method in the FlowAPI class. See\n                  <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowAPI&amp;v=rome\" target=\"_blank\">FlowAPI</a>.</span></p><p><div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">By default, the instance waits for 600 seconds to\n                  retrieve a single page of data from a <span class=\"ph\">MID Server</span>. If you\n                  encounter a timeout when running a <span class=\"ph\">Data Stream</span> action through a <span class=\"ph\">MID Server</span>, change this default by increasing the\n                    <span class=\"keyword parmname\">datastream_alternative_env_fetch_page_timeout_seconds</span>\n                  system property. </span></div></p>",
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "ScriptableDataStreamAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "ScriptableDataStream - Scoped, Global",
    "namespace_id": "sn_fd-namespace",
    "release": "sandiego",
    "text": "Provides methods to interact with a stream of data.",
    "text2": "This class can only be used in a server-side script after retrieving a ScriptableDataStream\n      object using one of these APIs:<br/><br/><ul class=\"ul\" id=\"ScriptableDataStreamAPI__ul_wnh_sfv_ylb\">\n        <li class=\"li\">The <span class=\"keyword apiname\">executeDataStreamAction()</span> method in the\n            <span class=\"keyword apiname\">FlowAPI</span> class. See <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableFlowAPI&amp;v=sandiego\" target=\"_blank\">FlowAPI</a>.</li>\n\n        <li class=\"li\">The <span class=\"keyword apiname\">getDataStream()</span> method in the\n            <span class=\"keyword apiname\">ScriptableFlowRunnerResult</span> class. See <a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerResultScopedAPI\" title=\"Captures the result of using ScriptableFlowRunner to execute a flow, subflow, or action. Includes data such as the context ID, domain, and any outputs from the flow execution.\">ScriptableFlowRunnerResult</a>.</li>\n\n      </ul><br/><br/>After retrieving a ScriptableDataStream object, call the methods in this specific order:<br/><br/><ol class=\"ol\" id=\"ScriptableDataStreamAPI__ol_k1k_yp1_3jb\">\n        <li class=\"li\">Use the <span class=\"keyword apiname\">hasNext()</span> method to determine whether there are more items in\n          the data stream.</li>\n\n        <li class=\"li\">Use the <span class=\"keyword apiname\">next()</span> method to access the next item in the stream.</li>\n\n        <li class=\"li\">Use the <span class=\"keyword apiname\">getItemIndex()</span>, <span class=\"keyword apiname\">getItemInPageIndex()</span>, and\n            <span class=\"keyword apiname\">getPageIndex()</span> methods to get information from the stream.</li>\n\n        <li class=\"li\">Use the <span class=\"keyword apiname\">close()</span> method to close the stream.</li>\n\n      </ol><br/><br/><div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">Always wrap data stream logic in a\n                  <code class=\"ph codeph\">try/catch</code> block to catch errors. Always include a\n                  <code class=\"ph codeph\">finally</code> statement that ends with the <span class=\"keyword apiname\">close()</span>\n                method from the <span class=\"keyword apiname\">ScriptableDataStream</span> class to close the data\n                stream and prevent performance issues.</span></div>",
    "type": "Server Side Scoped",
    "variable": ""
  },
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n(function() {\n  try {\n\n    var inputs = {}; \n\n    inputs['sys_id'] = '57af7aec73d423002728660c4cf6a71c';  // Pass the record’s sys_id in as input.  \n\n    var result = sn_fd.FlowAPI.getRunner()  // Create a ScriptableFlowRunner builder object.\n      .action('global.markapproved')        // Run the global scope action named markapproved.\n      .inForeground()\n      .inDomain('TOP/ACME')                 // Run the action from the TOP/ACME domain.                               \n      .withInputs(inputs)\n      .run();                               // Run the action and return a FlowRunnerResult object.\n\n    var contextId = result.getContextId();  // Retrieve the context ID from the result\n    var dateRun = result.getDate();\n    var domainUsed = result.getDomainId();  // Retrieve the Domain ID from the result.\n    var flowName = result.getFlowObjectName();\n    var flowObjectType = result.getFlowObjectType();\n\n    var outputs = result.getOutputs();            // Retrieve any outputs from the action execution.\n    var newApprovalStatus = outputs['approval'];  // Echo back the approval status for verification.\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\t\n})();\n   </code>",
            "text2": "This  shows how to create a\n                ScriptableFlowRunner builder object and uses it to execute an approval action on a\n                specific record. A ScriptableFlowRunnerResult object captures the execution\n                arguments and action outputs.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "scopedActionName",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and name of the action to execute. For example,\n                  <code class=\"ph codeph\">global.actionName</code>.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-action_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "action(String scopedActionName)",
        "order": 3560,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Identifies the scope and name of the action to execute.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "name",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The name of the input for the flow, subflow, or action.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Flow Designer: TableName\n*** Script: FlowRunnerResult\nFlow Object Name: global.test_action\nFlow Object Type: action\nDomain: null\nResult Time: 2020-06-09 00:10:57\nContextId: null\ncount: 1",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .action('global.test_action')\n      .addInput('table_name', 'incident')\n      .inForeground()\n      .run();\n\n    gs.info(result.debug());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  runs an action that takes a single input called\n        <code class=\"ph codeph\">table_name</code>.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "value",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Object",
            "text2": "The value of the input for the flow, subflow, or action.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-addInput_S_O",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "addInput(String name, Object value)",
        "order": 3920,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a single input. If the name passed as an argument already exists as a separate\n    input, the new value replaces the pre-existing value.",
        "text2": "<p>This method adds a single input. To create an object and add multiple inputs, use the\n          <span class=\"keyword apiname\">withInputs()</span> method.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "*** Script: FlowRunnerResult\nFlow Object Name: global.test_dsa\nFlow Object Type: datastream\nDomain: null\nResult Time: 2020-06-08 16:41:13\nContextId: null\ncount: 0",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .datastream('global.test_dsa')\n      .inForeground()\n      .run();\n\n    gs.info(result.debug());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to run a Data Stream action.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "scopedDatastreamName",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and name of the Data Stream action to execute. For example,\n                  <code class=\"ph codeph\">global.dataStreamActionName</code>.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-datastream_S",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "datastream(String scopedDatastreamName)",
        "order": 5590,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Identifies the scope and name of the data stream action to execute.",
        "text2": "<p>To learn more about data stream actions, see <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/sandiego-application-development/page/administer/integrationhub/concept/data-stream-actions.html\" target=\"_blank\">Data Stream actions and\n          pagination</a>.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "scopedFlowName",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and name of the flow to execute. For example,\n                  <code class=\"ph codeph\">global.flowName</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "*** Script: FlowRunnerResult\nFlow Object Name: global.test_flow\nFlow Object Type: flow\nDomain: null\nResult Time: 2020-06-08 16:41:13\nContextId: null\ncount: 0",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .inForeground()\n      .run();\n\n    gs.info(result.debug());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to run a flow that logs a message.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-flow_S",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "flow(String scopedFlowName)",
        "order": 6720,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Identifies the scope and name of the flow to execute.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Flow Designer: Cloning a new session to run as as user id: [user_name] from original user session: [user_name]\nFlow Designer: Message to log\nFlow Designer: Reverting cloned session to original user session: [user_name]\n*** Script: FlowRunnerResult\nFlow Object Name: global.test_flow\nFlow Object Type: flow\nDomain: null\nResult Time: 2020-06-08 16:41:13\nContextId: null\ncount: 0",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .inBackground()\n      .run();\n\n    gs.info(result.debug());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to run a flow asynchronously.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-inBackground",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "inBackground()",
        "order": 12280,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs the flow, subflow, or action asynchronously. Once the flow object starts running,\n    script execution resumes immediately.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "domainId",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The sys_id or name for the domain of execution for the flow.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n(function() {\n  try {\n\n    var inputs = {}; \n\n    inputs['sys_id'] = '57af7aec73d423002728660c4cf6a71c';  // Pass the record’s sys_id in as input.  \n\n    var result = sn_fd.FlowAPI.getRunner()  // Create a ScriptableFlowRunner builder object.\n      .action('global.markapproved')        // Run the global scope action named markapproved.\n      .inForeground()\n      .inDomain('TOP/ACME')                 // Run the action from the TOP/ACME domain.                               \n      .withInputs(inputs)\n      .run();                               // Run the action and return a FlowRunnerResult object.\n\n    var contextId = result.getContextId();  // Retrieve the context ID from the result\n    var dateRun = result.getDate();\n    var domainUsed = result.getDomainId();  // Retrieve the Domain ID from the result.\n    var flowName = result.getFlowObjectName();\n    var flowObjectType = result.getFlowObjectType();\n\n    var outputs = result.getOutputs();            // Retrieve any outputs from the action execution.\n    var newApprovalStatus = outputs['approval'];  // Echo back the approval status for verification.\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\t\n})();\n   </code>",
            "text2": "This  shows how to create a\n                ScriptableFlowRunner builder object and uses it to execute an approval action on a\n                specific record. A ScriptableFlowRunnerResult object captures the execution\n                arguments and action outputs.",
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-inDomain_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "inDomain(String domainId)",
        "order": 12320,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs the flow, subflow, or action in the specified domain. Checks to ensure the domain\n    exists and is available.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n(function() {\n  try {\n\n    var inputs = {}; \n\n    inputs['sys_id'] = '57af7aec73d423002728660c4cf6a71c';  // Pass the record’s sys_id in as input.  \n\n    var result = sn_fd.FlowAPI.getRunner()  // Create a ScriptableFlowRunner builder object.\n      .action('global.markapproved')        // Run the global scope action named markapproved.\n      .inForeground()\n      .inDomain('TOP/ACME')                 // Run the action from the TOP/ACME domain.                               \n      .withInputs(inputs)\n      .run();                               // Run the action and return a FlowRunnerResult object.\n\n    var contextId = result.getContextId();  // Retrieve the context ID from the result\n    var dateRun = result.getDate();\n    var domainUsed = result.getDomainId();  // Retrieve the Domain ID from the result.\n    var flowName = result.getFlowObjectName();\n    var flowObjectType = result.getFlowObjectType();\n\n    var outputs = result.getOutputs();            // Retrieve any outputs from the action execution.\n    var newApprovalStatus = outputs['approval'];  // Echo back the approval status for verification.\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\t\n})();\n   </code>",
            "text2": "This  shows how to create a\n                ScriptableFlowRunner builder object and uses it to execute an approval action on a\n                specific record. A ScriptableFlowRunnerResult object captures the execution\n                arguments and action outputs.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-inForeground",
        "hasExample": true,
        "hasReturn": true,
        "name": "inForeground()",
        "order": 12370,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs the flow, subflow, or action synchronously. Script execution pauses while the flow\n    object is running.",
        "text2": "<p><div class=\"note note\"><span class=\"notetitle\">Note:</span> <span class=\"ph\">This method does not support pausing the action to wait\n            for conditions. Steps that pause for wait conditions such as Ask for Approval or Wait\n            for Condition are not supported.</span></div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Flow Designer: Message to log.\n*** Script: [object FlowRunnerResult]",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .inForeground()\n      .quick()\n      .run();\n\n    gs.info(result);\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to run a flow without creating any related records.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-quick",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "quick()",
        "order": 13960,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "<span class=\"ph\">Runs a flow, subflow, action, or Data\n                    Stream action from a server-side script synchronously or asynchronously without\n                    creating execution details or other related records. Improves performance by\n                    eliminating record-keeping overhead.</span>\n    <span class=\"ph\">Use this API to increase the speed of high-volume processing, for\n                example multiple executions per second, in a production environment.</span>",
        "text2": "<p><dl class=\"dl\">\n          \n        <dt class=\"dt dlterm\">Reporting &amp; records generated</dt>\n\n        <dd class=\"dd\">This method does not create execution details and context records, regardless of <span class=\"ph\">Flow Designer</span> settings.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">Wait condition support</dt>\n\n        <dd class=\"dd\">This method does not support pausing an action or flow to wait for conditions. Actions,\n          flow logic, and steps that pause for wait conditions such as Ask for Approval, Wait for\n          Condition, or Wait for a duration are not supported.</dd>\n\n      \n          \n        <dt class=\"dt dlterm\">MID Server support</dt>\n\n        <dd class=\"dd\">This method does not support pausing an action or flow to run from a MID Server.</dd>\n\n      \n        </dl></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n(function() {\n  try {\n\n    var inputs = {}; \n\n    inputs['sys_id'] = '57af7aec73d423002728660c4cf6a71c';  // Pass the record’s sys_id in as input.  \n\n    var result = sn_fd.FlowAPI.getRunner()  // Create a ScriptableFlowRunner builder object.\n      .action('global.markapproved')        // Run the global scope action named markapproved.\n      .inForeground()\n      .inDomain('TOP/ACME')                 // Run the action from the TOP/ACME domain.                               \n      .withInputs(inputs)\n      .run();                               // Run the action and return a FlowRunnerResult object.\n\n    var contextId = result.getContextId();  // Retrieve the context ID from the result\n    var dateRun = result.getDate();\n    var domainUsed = result.getDomainId();  // Retrieve the Domain ID from the result.\n    var flowName = result.getFlowObjectName();\n    var flowObjectType = result.getFlowObjectType();\n\n    var outputs = result.getOutputs();            // Retrieve any outputs from the action execution.\n    var newApprovalStatus = outputs['approval'];  // Echo back the approval status for verification.\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\t\n})();\n   </code>",
            "text2": "This  shows how to create a\n                ScriptableFlowRunner builder object and uses it to execute an approval action on a\n                specific record. A ScriptableFlowRunnerResult object captures the execution\n                arguments and action outputs.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerResultScopedAPI\" title=\"Captures the result of using ScriptableFlowRunner to execute a flow, subflow, or action. Includes data such as the context ID, domain, and any outputs from the flow execution.\">ScriptableFlowRunnerResult</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Object containing the execution details of a <span class=\"ph\">Flow Designer</span>\n                  action, flow, or subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-run",
        "hasExample": true,
        "hasReturn": true,
        "name": "run()",
        "order": 14260,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs the flow, subflow, or action with the specified parameters.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Flow Designer: Cloning a new session to run as as user id: [user_name] from original user session: [user_name]\nFlow Designer: Message to log\nFlow Designer: Reverting cloned session to original user session: [user_name]\n*** Script: FlowRunnerResult\nFlow Object Name: global.test_subflow\nFlow Object Type: flow\nDomain: null\nResult Time: 2020-06-08 16:41:13\nContextId: null\ncount: 0",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .subflow('global.test_subflow')\n      .inForeground()\n      .run();\n\n    gs.info(result);\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "scopedSubflowName",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Scope and name of the subflow to execute. For example,\n                  <code class=\"ph codeph\">global.subflowName</code>.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-subflow_S",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "subflow(String scopedSubflowName)",
        "order": 17410,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Identifies the scope and name of the subflow to execute.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "timeout",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Number",
            "text2": "Timeout in milliseconds.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Flow Designer: Cloning a new session to run as as user id: [user_name] from original user session: [user_name]\nFlow Designer: Reverting cloned session to original user session: [user_name]\n*** Script: FlowRunnerResult\nFlow Object Name: global.test_flow\nFlow Object Type: flow\nDomain: null\nResult Time: 2020-06-08 18:22:35\nContextId: null\ncount: 0",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .inForeground()\n      .timeout(120000)\n      .run();\n\n    gs.info(result.debug());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})(); </code>",
            "text2": "This  shows how to run a flow and sets a timeout for two minutes.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-timeout_N",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "timeout(Number timeout)",
        "order": 17840,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Sets a timeout for a flow, subflow, or action execution.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "aliasName",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The name of the alias to override.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .withConnectionAliasOverride('sn_original_alias.spoke', 'x_new_alias.spoke')\n      .inForeground()\n      .run();\n\n    gs.info(result.debug());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to run a flow using a different alias than the default associated\n        with the flow.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "overrideName",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The name of the alias to use when running the flow, subflow, or action.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "FR-wConnectionAliasOverride_S_S",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "withConnectionAliasOverride(String aliasName, String overrideName)",
        "order": 18510,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Overrides the <span class=\"ph\">Connections and Credentials</span> alias associated with the flow,\n    action, or subflow.",
        "text2": "<p>To learn more about overriding a <span class=\"ph\">Connections and Credentials</span> alias, see <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/sandiego-application-development/page/administer/integrationhub/concept/support-multiple-connections.html\" target=\"_blank\">Supporting multiple\n        connections</a>.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Object",
            "text2": "Map object containing the name-value pairs that define inputs for the flow,\n                subflow, or action.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>\n(function() {\n  try {\n\n    var inputs = {}; \n\n    inputs['sys_id'] = '57af7aec73d423002728660c4cf6a71c';  // Pass the record’s sys_id in as input.  \n\n    var result = sn_fd.FlowAPI.getRunner()  // Create a ScriptableFlowRunner builder object.\n      .action('global.markapproved')        // Run the global scope action named markapproved.\n      .inForeground()\n      .inDomain('TOP/ACME')                 // Run the action from the TOP/ACME domain.                               \n      .withInputs(inputs)\n      .run();                               // Run the action and return a FlowRunnerResult object.\n\n    var contextId = result.getContextId();  // Retrieve the context ID from the result\n    var dateRun = result.getDate();\n    var domainUsed = result.getDomainId();  // Retrieve the Domain ID from the result.\n    var flowName = result.getFlowObjectName();\n    var flowObjectType = result.getFlowObjectType();\n\n    var outputs = result.getOutputs();            // Retrieve any outputs from the action execution.\n    var newApprovalStatus = outputs['approval'];  // Echo back the approval status for verification.\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\t\n})();\n   </code>",
            "text2": "Creates an input object and passes the value to the <span class=\"keyword apiname\">withInputs()</span>\n        method.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "<a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowRunnerScopedAPI\" title=\"Create a builder object used to define parameters for flow, subflow, and action execution. You can specify a flow to execute in a particular domain. Start the flow, subflow, or action execution directly from the builder and view the results in a ScriptableFlowRunnerResult object.\">ScriptableFlowRunner</a>",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Builder object used to run a <span class=\"ph\">Flow Designer</span> action, flow, or\n                  subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunner-withInputs_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "withInputs(Map inputs)",
        "order": 18610,
        "parentId": "ScriptableFlowRunnerScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunner_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Adds a collection of inputs. If a name in one of the name-value pairs already exists,\n    the new value replaces the pre-existing value.",
        "text2": null,
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "ScriptableFlowRunnerScopedAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "ScriptableFlowRunner",
    "namespace_id": "sn_fd-namespace",
    "release": "sandiego",
    "text": "<span class=\"ph\">Create a builder object used to define parameters\n                for flow, subflow, and action execution. You can specify a flow to execute in a\n                particular domain. Start the flow, subflow, or action execution directly from the\n                builder and view the results in a ScriptableFlowRunnerResult object.</span>",
    "text2": "<p class=\"p\">Use these methods in your server-side scripts with the <span class=\"keyword parmname\">sn_fd</span> namespace\n        identifier.</p><br/><br/><h2 class=\"title sectiontitle\">API call order</h2>\n      \n      <p class=\"p\">Build and execute flows, subflows, and actions using these APIs in the following order:</p>\n\n      <div class=\"p\">\n                <dl class=\"dl\">\n                  \n                    <dt class=\"dt dlterm\">1. <span class=\"keyword apiname\">FlowAPI</span>: Creates a builder object</dt>\n\n                    <dd class=\"dd\">Use <span class=\"keyword apiname\">getRunner()</span> to instantiate the ScriptableFlowRunner\n                      builder object.</dd>\n\n                  \n                  \n                    <dt class=\"dt dlterm\">2. <span class=\"keyword apiname\">ScriptableFlowRunner</span>: Specify  <span class=\"ph\">Flow Designer</span> content to run</dt>\n\n                    <dd class=\"dd\">Use these methods in the following order to create the builder pattern:<div class=\"p\">\n                        <ol class=\"ol\" id=\"ScriptableFlowRunnerScopedAPI__d612e847\">\n                          <li class=\"li\">Use one of the methods <span class=\"keyword apiname\">action()</span>,\n                              <span class=\"keyword apiname\">datastream()</span>, <span class=\"keyword apiname\">flow()</span>, or\n                              <span class=\"keyword apiname\">subflow()</span> to specify what type of <span class=\"ph\">Flow Designer</span> object to build.</li>\n\n                          <li class=\"li\">Use one or more methods such as <span class=\"keyword apiname\">addInput()</span>,\n                              <span class=\"keyword apiname\">inDomain()</span>, or <span class=\"keyword apiname\">quick()</span> to\n                            specify execution parameters.</li>\n\n                          <li class=\"li\">Use the <span class=\"keyword apiname\">run()</span> method to run the action, flow, or\n                            subflow with the provided parameters and return a\n                            ScriptableFlowRunnerResult object.</li>\n\n                        </ol>\n</div>\n</dd>\n\n                  \n                  \n                    <dt class=\"dt dlterm\">3. <span class=\"keyword apiname\">ScriptableFlowRunnerResult</span>: Retrieve <span class=\"ph\">Flow Designer</span> execution details</dt>\n\n                    <dd class=\"dd\">Use one or more methods such as <span class=\"keyword apiname\">getContextId()</span>,\n                        <span class=\"keyword apiname\">getOutputs()</span>, and <span class=\"keyword apiname\">getDomainId()</span> to\n                      view execution details.</dd>\n\n                  \n                </dl>\n</div><br/><br/><h2 class=\"title sectiontitle\">Example</h2>\n      \n      <p class=\"p\">This example shows how to create a\n                ScriptableFlowRunner builder object and uses it to execute an approval action on a\n                specific record. A ScriptableFlowRunnerResult object captures the execution\n                arguments and action outputs.</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>\n(function() {\n  try {\n\n    var inputs = {}; \n\n    inputs['sys_id'] = '57af7aec73d423002728660c4cf6a71c';  // Pass the record’s sys_id in as input.  \n\n    var result = sn_fd.FlowAPI.getRunner()  // Create a ScriptableFlowRunner builder object.\n      .action('global.markapproved')        // Run the global scope action named markapproved.\n      .inForeground()\n      .inDomain('TOP/ACME')                 // Run the action from the TOP/ACME domain.                               \n      .withInputs(inputs)\n      .run();                               // Run the action and return a FlowRunnerResult object.\n\n    var contextId = result.getContextId();  // Retrieve the context ID from the result\n    var dateRun = result.getDate();\n    var domainUsed = result.getDomainId();  // Retrieve the Domain ID from the result.\n    var flowName = result.getFlowObjectName();\n    var flowObjectType = result.getFlowObjectType();\n\n    var outputs = result.getOutputs();            // Retrieve any outputs from the action execution.\n    var newApprovalStatus = outputs['approval'];  // Echo back the approval status for verification.\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\t\n})();\n   </code></code></pre></div>",
    "type": "Server Side Scoped",
    "variable": ""
  },
  {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "*** Script: FlowRunnerResult\nFlow Object Name: global.test_flow\nFlow Object Type: flow\nDomain: null\nResult Time: 2020-06-08 18:28:41\nContextId: null\ncount: 0",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .inForeground()\n      .timeout(12000)\n      .run();\n\n    gs.info(result.debug());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to retrieve information about the executed flow, subflow, or action\n        from the ScriptableFlowRunnerResult object.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Execution details about the <span class=\"ph\">Flow Designer</span> action, flow, or\n                subflow run.<ul class=\"ul\" id=\"FlowRunnerResult-debug__ul_tcc_dqr_5lb\">\n                  <li class=\"li\">flow object name: Name of the flow, subflow, or action.</li>\n\n                  <li class=\"li\">flow object type: Flow, subflow, action, or datastream action.</li>\n\n                  <li class=\"li\">domain ID: ID of the domain that the flow, subflow, or action ran in.</li>\n\n                  <li class=\"li\">result time: Amount of time it took to run.</li>\n\n                  <li class=\"li\">context ID: Sys_id of the <span class=\"ph\">Flow Designer</span> execution details\n                    record for the action, flow, or subflow.</li>\n\n                  <li class=\"li\">output count: Number of action or subflow outputs.</li>\n\n                </ul>",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunnerResult-debug",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "debug()",
        "order": 5670,
        "parentId": "ScriptableFlowRunnerResultScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunnerresult_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns information about the executed flow, subflow, or action, including the context\n    ID, domain ID, and execution outputs.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "4ecead85c4da1110598d0c7d6bf73554",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var contextId = result.getContextId();</code>",
            "text2": "This  shows how to retrieve a context ID from a ScriptableFlowRunnerResult\n        object.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The sys_id of the <span class=\"ph\">Flow Designer</span> execution details record for the\n                action, flow, or subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunnerResult-getContextId",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getContextId()",
        "order": 7800,
        "parentId": "ScriptableFlowRunnerResultScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunnerresult_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the context ID of the flow, subflow, or action.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var datastream = result.getDataStream();</code>",
            "text2": "This  shows how to retrieve a data stream from a ScriptableFlowRunnerResult\n        object.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "ScriptableDataStream",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "A ScriptableDataStream object you can use to iterate through items in a data\n                stream. Use the methods in the <span class=\"keyword apiname\">ScriptableDataStream</span> class to\n                interact with this object. See <a class=\"xref\" href=\"https://developer.servicenow.com/go_to_api.do?ID=ScriptableDataStreamAPI&amp;v=sandiego\" target=\"_blank\">ScriptableDataStream</a>.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunnerResult-getDataStream",
        "hasExample": true,
        "hasReturn": true,
        "name": "getDataStream()",
        "order": 7980,
        "parentId": "ScriptableFlowRunnerResultScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunnerresult_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the stream of data from a data stream action.",
        "text2": "<p>If the <span class=\"keyword apiname\">datastream()</span> method was used in the\n          <span class=\"keyword apiname\">ScriptableFlowRunner</span> builder class, this returns the stream of data as\n        a ScriptableDataStream object. Use the <span class=\"keyword apiname\">ScriptableDataStream</span> class to\n        iterate over items in the stream. See <a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableDataStreamAPI\" title=\"Provides methods to interact with a stream of data.\">ScriptableDataStream</a>.</p><p>For more information about data stream actions, see <a class=\"xref\" href=\"https://docs.servicenow.com/bundle/sandiego-application-development/page/administer/integrationhub/concept/data-stream-actions.html\" target=\"_blank\">Data Stream actions and\n          pagination</a>.</p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "2020-05-22 18:45:42",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .inForeground()\n      .timeout(12000)\n      .run();\n\n    gs.info(result.getDate());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to retrieve the date and time of a flow execution from a\n        ScriptableFlowRunnerResult object.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "GlideDateTime",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The execution date and time for the flow, subflow, or action.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunnerResult-getDate",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getDate()",
        "order": 7990,
        "parentId": "ScriptableFlowRunnerResultScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunnerresult_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the date and time when a <span class=\"ph\">Flow Designer</span> action, flow, or subflow\n    ran as a GlideDateTime object.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "4ecead85a4da1110598d0c7d6bf75554",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .inForeground()\n      .inDomain('TOP/ACME')\n      .timeout(12000)\n      .run();\n\n    gs.info(result.getDomainId());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to retrieve a domain ID from a ScriptableFlowRunnerResult\n        object.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The sys_id of the domain that the <span class=\"ph\">Flow Designer</span> action, flow, or\n                subflow ran in.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunnerResult-getDomainId",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getDomainId()",
        "order": 8470,
        "parentId": "ScriptableFlowRunnerResultScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunnerresult_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the sys_id of the domain that the <span class=\"ph\">Flow Designer</span> action, flow, or\n    subflow ran in.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "global.test_flow",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .inForeground()\n      .timeout(12000)\n      .run();\n\n    gs.info(result.getFlowObjectName());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to retrieve the name of the flow, subflow, or action name from a\n        ScriptableFlowRunnerResult object.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "String",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The scope and internal name of the <span class=\"ph\">Flow Designer</span> action, flow,\n                or subflow run. For example, <code class=\"ph codeph\">global.emailflow</code>.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunnerResult-getFlowObjectName",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getFlowObjectName()",
        "order": 8880,
        "parentId": "ScriptableFlowRunnerResultScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunnerresult_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the scope and internal name of the <span class=\"ph\">Flow Designer</span> action, flow,\n    or subflow run.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "flow",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .flow('global.test_flow')\n      .inForeground()\n      .timeout(12000)\n      .run();\n\n    gs.info(result.getFlowObjectType());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to retrieve the flow object type from the\n          <span class=\"keyword apiname\">ScriptableFlowRunnerResult</span> API.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "FlowObjectType",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The type of <span class=\"ph\">Flow Designer</span> object run, which is either action,\n                flow, or subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunnerResult-getFlowObjectType",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getFlowObjectType()",
        "order": 8890,
        "parentId": "ScriptableFlowRunnerResultScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunnerresult_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the type of <span class=\"ph\">Flow Designer</span> object run.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "sandiego",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Flow Designer: Warning. This is an important log message.",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>(function() {\n  try {\n\n    var result = sn_fd.FlowAPI.getRunner()\n      .action('global.test_action')\n      .inForeground()\n      .timeout(12000)\n      .run();\n\n    gs.info(result.getOutputs());\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": "This  shows how to retrieve the outputs from a <span class=\"ph\">Flow Designer</span> action,\n        flow, or subflow run with the <span class=\"keyword apiname\">ScriptableFlowRunner</span> API.",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Object",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Object containing the output of a completed <span class=\"ph\">Flow Designer</span>\n                action, flow, or subflow.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "FlowRunnerResult-getOutputs",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getOutputs()",
        "order": 10040,
        "parentId": "ScriptableFlowRunnerResultScopedAPI",
        "parent_permalink": "class_namespace__scoped_scriptableflowrunnerresult_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns the outputs of a completed <span class=\"ph\">Flow Designer</span> action, flow, or\n    subflow.",
        "text2": null,
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "ScriptableFlowRunnerResultScopedAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "ScriptableFlowRunnerResult",
    "namespace_id": "sn_fd-namespace",
    "release": "sandiego",
    "text": "<span class=\"ph\">Captures the result of using\n                  <span class=\"keyword apiname\">ScriptableFlowRunner</span> to execute a flow, subflow, or action.\n                Includes data such as the context ID, domain, and any outputs from the flow\n                execution.</span>",
    "text2": "<p class=\"p\">Use these methods in your server-side scripts with the <span class=\"keyword parmname\">sn_fd</span> namespace\n        identifier.</p><br/><br/><h2 class=\"title sectiontitle\">API call Order</h2>\n      \n      <p class=\"p\">Build and execute flows, subflows, and actions using these APIs in the following order:</p>\n\n      <div class=\"p\">\n                <dl class=\"dl\">\n                  \n                    <dt class=\"dt dlterm\">1. <span class=\"keyword apiname\">FlowAPI</span>: Creates a builder object</dt>\n\n                    <dd class=\"dd\">Use <span class=\"keyword apiname\">getRunner()</span> to instantiate the ScriptableFlowRunner\n                      builder object.</dd>\n\n                  \n                  \n                    <dt class=\"dt dlterm\">2. <span class=\"keyword apiname\">ScriptableFlowRunner</span>: Specify  <span class=\"ph\">Flow Designer</span> content to run</dt>\n\n                    <dd class=\"dd\">Use these methods in the following order to create the builder pattern:<div class=\"p\">\n                        <ol class=\"ol\" id=\"ScriptableFlowRunnerResultScopedAPI__d2210e848\">\n                          <li class=\"li\">Use one of the methods <span class=\"keyword apiname\">action()</span>,\n                              <span class=\"keyword apiname\">datastream()</span>, <span class=\"keyword apiname\">flow()</span>, or\n                              <span class=\"keyword apiname\">subflow()</span> to specify what type of <span class=\"ph\">Flow Designer</span> object to build.</li>\n\n                          <li class=\"li\">Use one or more methods such as <span class=\"keyword apiname\">addInput()</span>,\n                              <span class=\"keyword apiname\">inDomain()</span>, or <span class=\"keyword apiname\">quick()</span> to\n                            specify execution parameters.</li>\n\n                          <li class=\"li\">Use the <span class=\"keyword apiname\">run()</span> method to run the action, flow, or\n                            subflow with the provided parameters and return a\n                            ScriptableFlowRunnerResult object.</li>\n\n                        </ol>\n</div>\n</dd>\n\n                  \n                  \n                    <dt class=\"dt dlterm\">3. <span class=\"keyword apiname\">ScriptableFlowRunnerResult</span>: Retrieve <span class=\"ph\">Flow Designer</span> execution details</dt>\n\n                    <dd class=\"dd\">Use one or more methods such as <span class=\"keyword apiname\">getContextId()</span>,\n                        <span class=\"keyword apiname\">getOutputs()</span>, and <span class=\"keyword apiname\">getDomainId()</span> to\n                      view execution details.</dd>\n\n                  \n                </dl>\n</div><br/><br/><h2 class=\"title sectiontitle\">Example</h2>\n      \n      <p class=\"p\">This example shows how to create a\n                ScriptableFlowRunner builder object and uses it to execute an approval action on a\n                specific record. A ScriptableFlowRunnerResult object captures the execution\n                arguments and action outputs.</p>\n\n      <div class=\"p\">\n        <pre><code class='language-javascript'><code>\n(function() {\n  try {\n\n    var inputs = {}; \n\n    inputs['sys_id'] = '57af7aec73d423002728660c4cf6a71c';  // Pass the record’s sys_id in as input.  \n\n    var result = sn_fd.FlowAPI.getRunner()  // Create a ScriptableFlowRunner builder object.\n      .action('global.markapproved')        // Run the global scope action named markapproved.\n      .inForeground()\n      .inDomain('TOP/ACME')                 // Run the action from the TOP/ACME domain.                               \n      .withInputs(inputs)\n      .run();                               // Run the action and return a FlowRunnerResult object.\n\n    var contextId = result.getContextId();  // Retrieve the context ID from the result\n    var dateRun = result.getDate();\n    var domainUsed = result.getDomainId();  // Retrieve the Domain ID from the result.\n    var flowName = result.getFlowObjectName();\n    var flowObjectType = result.getFlowObjectType();\n\n    var outputs = result.getOutputs();            // Retrieve any outputs from the action execution.\n    var newApprovalStatus = outputs['approval'];  // Echo back the approval status for verification.\n\t\t\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\t\n})();\n   </code></code></pre></div>",
    "type": "Server Side Scoped",
    "variable": ""
  },
  {
    "children": [
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "scopeName.subflowName",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "The application scope for the subflow and the internal name of the subflow to\n                run. If scopeName is not included, the scope of the user currently logged in is\n                used. Retrieve the internal name of the subflow using the <span class=\"ph uicontrol\">Internal\n                  name</span> column on the <span class=\"ph\">Flow Designer</span> landing\n                page.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>//Run a subflow that takes two inputs: user, a sys_user record, and laptop_welcome_message, a string.\n(function startSubflowAsync() {\n\n  try {\n    var userToProvisionFor = new GlideRecord('sys_user');\n    userToProvisionFor.get('62826bf03710200044e0bfc8bcbe5df1');\n\n    var inputs = {};\n    inputs['user'] = userToProvisionFor;\n    inputs['laptop_welcome_message'] = 'Welcome Onboard!!';\n\n    var result = sn_fd.Subflow.startAsync('sn_devstudio.provisionlaptop', inputs);\n\n    //The Sys ID of a flow execution (contextId)\n    var contextId = result.contextId;\n\n  } catch (ex) {\n    var message = ex.getMessage();\n    gs.error(message);\n  }\n\n})();</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Object",
            "order": 10,
            "release": "sandiego",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "PlanResponse object containing the following properties: <ul class=\"ul\" id=\"SubflowScoped-startAsync_S_O__ul_bd2_k2v_ncb\">\n                  <li class=\"li\">contextId: Sys_id of the execution details record for the executed subflow.\n                    Access the execution details by navigating to the Flow Executions tab in <span class=\"ph\">Flow Designer</span> and filtering by sys_id.</li>\n\n                </ul>\n<div class=\"p\">An exception occurs when the subflow:<ul class=\"ul\" id=\"SubflowScoped-startAsync_S_O__ul_ub3_n3t_pcb\">\n                    <li class=\"li\">Does not exist within the specified application scope, or the subflow or\n                      scope name has been misspelled.</li>\n\n                    <li class=\"li\">Is not published.</li>\n\n                    <li class=\"li\">Is passed an input object that does not match the subflow inputs.</li>\n\n                    <li class=\"li\">Exceeds the recursion limit set by the\n                        <span class=\"keyword parmname\">com.glide.hub.flow_engine.indirect_recursion_limit</span>\n                      system property. The default value is three.</li>\n\n                  </ul>\n</div>",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "inputs",
            "order": 20,
            "release": "sandiego",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Map",
            "text2": "Name-value pairs that define subflow inputs. If a subflow includes mandatory\n                inputs, they must be included. For inputs of Reference or Document ID field types,\n                use a GlideRecord object as the value.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "SubflowScoped-startAsync_S_O",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "startAsync(String scopeName.subflowName, Map inputs)",
        "order": 17280,
        "parentId": "SubflowScopedAPI",
        "parent_permalink": "class_namespace__scoped_subflow_sn_fd__sandiego",
        "release": "sandiego",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Runs a published subflow asynchronously.",
        "text2": "<p>Asynchronous calls are non-blocking, allowing the client to execute other code in the\n        script without having to wait for the subflow to complete.</p>",
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "SubflowScopedAPI",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "Subflow",
    "namespace_id": "sn_fd-namespace",
    "release": "sandiego",
    "text": "Runs published <span class=\"ph\">Flow Designer</span> subflows.",
    "text2": "This API is deprecated and replaced by the <a class=\"xref\" href=\"dev.do#!/reference/api/sandiego/server/sn_fd-namespace/ScriptableFlowAPI\" title=\"Use FlowAPI methods to execute actions, flows, or subflows in server-side scripts using either blocking or non-blocking methods.\">FlowAPI - Scoped, Global</a>.<br/><br/>The <span class=\"keyword apiname\">Subflow</span> API can only be used in server scripts.<br/><br/>Use the <span class=\"keyword parmname\">sn_fd</span> namespace to access the <span class=\"keyword apiname\">Subflow</span> API.<br/><br/>Before interacting with a subflow using the <span class=\"keyword apiname\">Subflow</span> API, you must first\n      create and publish the subflow in the <span class=\"ph\">Flow Designer</span> interface. Because the\n        <span class=\"keyword apiname\">Subflow</span> API only interacts with pre-built subflows, there is no\n      constructor for the class.<br/><br/><div class=\"note note\"><span class=\"notetitle\">Note:</span> To optimize instance performance, avoid calling these methods from an asynchronous\n        business rule script. Instead, create a scheduled job record within the <span class=\"ph\">Flow Designer</span> UI.</div>",
    "type": "Server Side Scoped",
    "variable": ""
  }
]