declare class AgentNowHandler {
  constructor();
  /**
   * Gets status of the request with the given
   * ID.
   * @param requestId A check request ID generated by calling the runCheckForCis()
   * method.
   */
  getRequestStatus(requestId: string): any;
  /**
   * Gets the test check status of the given
   * test result.
   * @param testResultId A test result ID generated by creating a test check request.
   */
  getTestResultStatus(testResultId: string): any;
  /**
   * Runs a check against the given
   * configuration item.
   * @param cis GlideRecord of any CMDB table (any application, host, or agent) that the check
   * is working against.
   * @param check Contains the check ID and optional check parameters. {
   * "checkDefId": "String",
   * "params": Object
   * }
   * @param priority Priority of
   * the request to be set on the ECC queue.Possible values:
   * 0: interactive
   *
   * 1: expedited
   *
   * 2: standard
   *
   *
   *
   * @param timeout Value of the timeout for the request in
   * seconds.
   */
  runCheckForCis(
    cis: any,
    check: any | undefined,
    priority: number,
    timeout: number,
  ): any;
  /**
   * Stops a background
   * check.
   * @param requestId The ID of a background check request generated by calling the
   * runCheckForCis() method.
   */
  stopBackgroundCheck(requestId: string): any;
}
export { AgentNowHandler };
