[
  {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Incident priority in update number 3 was 4",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nif (hw.walkTo(3)) {\n    var oldPriority = hw.getWalkedRecord().priority;\n    gs.info('Incident priority in update number ' + hw.getUpdateNumber() + ' was ' + oldPriority);\n} else\n    gs.info('Incident does not have update number 3');</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "tableName",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Name of table containing the record to retrieve.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "sydId",
            "order": 20,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "sys_id of the record to retrieve.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "r_HW-HistoryWalker_S_S",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "name": "HistoryWalker(String tableName, String sysId)",
        "order": 3040,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Fetches the database record based on the parameters, using the History Sets to retrieve\n    the historic data.",
        "text2": null,
        "type": "Constructor",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "tableName",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "Name of table containing the record to retrieve.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Incident priority in update number 3 was 4",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue(), true);\nif (hw.walkTo(3)) {\n    var oldPriority = hw.getWalkedRecord().priority;\n    gs.info('Incident priority in update number ' + hw.getUpdateNumber() + ' was ' + oldPriority);\n} else\n    gs.info('Incident does not have update number 3');\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "sydId",
            "order": 20,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "String",
            "text2": "sys_id of the record to retrieve.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "useAudit",
            "order": 30,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Boolean",
            "text2": "<ul class=\"ul\" id=\"r_HW-HistoryWalker_S_S_B__ul_jvm_pq5_qbb\">\n                  <li class=\"li\">If set to true, uses audit data to retrieve historic date.</li>\n\n                  <li class=\"li\">If set to false,  uses history set to retrieve historic date.</li>\n\n                </ul>",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "r_HW-HistoryWalker_S_S_B",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "name": "HistoryWalker(String tableName, String sysId, Boolean useAudit)",
        "order": 3050,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Fetches the database record based on the parameters, using the History Sets or Audit\n    data to retrieve the historic data, depending on the third parameter.",
        "text2": null,
        "type": "Constructor",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Update number: 3",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.walkTo(3);\ngs.info('Update number: ' + hw.getUpdateNumber());</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "int",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Current update number or, -1 if record is not found",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-getUpdateNumber",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getUpdateNumber()",
        "order": 11880,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Gets the update number of the current walked glide record.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Priority in update number 0: 4\nShort description in update number 1: My monitor has stopped working",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.walkTo(0);\nvar walkedRecord = hw.getWalkedRecord();\ngs.info('Priority in update number 0: ' + walkedRecord.priority);\nhw.walkTo(1);\nwalkedRecord = hw.getWalkedRecord();\ngs.info('Short description in update number 1: ' + walkedRecord.short_description);</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "GlideRecord",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "The walked GlideRecord.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-getWalkedRecord",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getWalkedRecord()",
        "order": 12150,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Gets the record filled with the history/audit data after walking to an update\n    number.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Priority in update number 0: 4\nShort description in update number 1: My monitor has stopped working",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar walkedRecord = [];\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.walkTo(0);\nwalkedRecord[0] = hw.getWalkedRecordCopy();\nhw.walkTo(1);\nwalkedRecord[1] = hw.getWalkedRecordCopy();\n\ngs.info('Priority in update number 0: ' + walkedRecord[0].priority);\ngs.info('Short description in update number 1: ' + walkedRecord[1].short_description);\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "GlideRecord",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "A copy of the walked GlideRecord.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-getWalkedRecordCopy",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "getWalkedRecordCopy()",
        "order": 12160,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Returns a copy of the record filled with the history/audit data after walking to an\n    update number.",
        "text2": "<p><div class=\"note note\"><span class=\"notetitle\">Note:</span> The <span class=\"keyword apiname\">getWalkedRecord()</span> API might modify the obtained walkedRecord\n          after walking to another update number. The <span class=\"keyword apiname\">getWalkedRecordCopy()</span> API\n          gets a clone to the walked record to prevent that.</div></p>",
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Field level security is active: true",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\ngs.info('Field level security is active: ' + hw.isFieldLevelSecurity());</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Boolean",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Returns true if field level security is enabled, else returns false.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-isFieldLevelSecurity",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "isFieldLevelSecurity()",
        "order": 12980,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Specifies if the record-level read access is applied on the record when retrieving from\n    the database.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Record level security is active: true",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\ngs.info('Record level security is active: ' + hw.isRecordLevelSecurity());\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Boolean",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Returns true if the record-level security is enabled, else returns\n                false.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-isRecordLevelSecurity",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "isRecordLevelSecurity()",
        "order": 13230,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Specifies if the record-level read access is applied on the record when retrieving from\n    the database.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Changes is active: true",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\ngs.info('Changes is active: ' + hw.isWithChanges());</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Boolean",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Returns true if the changes support is enabled, else returns false.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-isWithChanges",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "isWithChanges()",
        "order": 13470,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Specifies if any of the methods that walk the record from one update to another,\n    support the “changes” data for each element.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Populating journal fields is active: false",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\ngs.info('Populating journal fields is active: ' + hw. isWithJournalFields());\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Boolean",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Returns true if journal fields are populated, else returns false.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-isWithJournalFields",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "isWithJournalFields()",
        "order": 13480,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Specifies if journal type fields are populated from the historical values.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Populating variables is active: false",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\ngs.info('Populating variables is active: ' + hw. isWithVariables());</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Boolean",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Returns true if including values for variables, else returns false.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-isWithVariables",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "isWithVariables()",
        "order": 13490,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Specifies if values are set for variables that are recorded in the history.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "fieldLevelSecurity",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Boolean",
            "text2": "If set to true, field-level security is enabled. The default value is\n                true.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.setFieldLevelSecurity(false);\nhw.walkTo(0);\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          }
        ],
        "dc_identifier": "HW-setFieldLevelSecurity_B",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "setFieldLevelSecurity(Boolean fieldLevelSecurity)",
        "order": 15960,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Sets the field-level read access on each element before setting the historical value of\n    that element in the GlideRecord. If the field-level security is enabled, it prevents the API to\n    populate the fields of the walked record that the user of the API does not have access\n    to.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "recordLevelSecurity",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Boolean",
            "text2": "If set to true, record-level read access security is enabled. The default value\n                is true.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.setRecordLevelSecurity(false);\nhw.walkTo(0);\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-setRecordLevelSecurity_B",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "setRecordLevelSecurity(Boolean recordLevelSecurity)",
        "order": 17030,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Sets the record-level read access on the record when retrieving from the database. The\n    record-level security prevents the API to retrieve the walked record if the user of the API does\n    not have access to the GlideRecord.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.setWithChanges(false);\nhw.walkTo(0);\ndo {\n    var oldPriority = hw.getWalkedRecord().priority;\n    gs.info('Incident priority in update number ' + hw.getUpdateNumber() + ' was ' + oldPriority);\n} while (hw.walkForward());",
                "text2": "Example: Without the Changes data support",
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.walkTo(0);\ndo {\n    printChangedFields(hw);\n} while (hw.walkForward());\n\nfunction printChangedFields(hw) {\n    var walkedGr = hw.getWalkedRecord();\n    var fields = GlideScriptRecordUtil.get(walkedGr).getChangedFieldNames();\n    gs.info(\"Fields changed at update \" + hw.getUpdateNumber() + \" were:\");\n    for (var j = 0; j &lt; fields.size(); j++)\n        gs.info(\" \" + fields.get(j));\n    gs.info(\"\");\n}\n</code>",
            "text2": " With the Changes data support",
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "withChanges",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Boolean",
            "text2": "If set to true, the “changes” data is supported for each element. The default\n                value is true.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "r_HW-setWithChanges_B",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "setWithChanges(Boolean withChanges)",
        "order": 17670,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Sets the “changes” data support for each element for a method that walks the record\n    from one update to another.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "withJournalFields",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Boolean",
            "text2": "If set to true, include journal-type fields. Th default value is false.",
            "type": "Parameter",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.setWithJournalFields(true);\nif (hw.walkTo(0)) {\n    var workNotes = hw.getWalkedRecord().work_notes;\n    gs.info('Work Notes in update number ' + hw.getUpdateNumber() + ' was ' + workNotes);\n}\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-setWithJournalFields_B",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "setWithJournalFields(Boolean withJournalFields)",
        "order": 17680,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Specifies if journal type fields are populated from the historical values.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": null,
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.setWithVariables(true);\nhw.walkTo(0);\nif (hw.walkTo(0)) {\n    var varUrgency = hw.getWalkedRecord().variables.urgency;\n    gs.info('Variable Urgency in update number ' + hw.getUpdateNumber() + ' was ' + varUrgency);\n}\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "void",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Method does not return a value",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "withVariables",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Boolean",
            "text2": "If set to true, values are populated for variables. The default value is\n                false.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "HW-setWithVariables_B",
        "hasExample": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "setWithVariables(Boolean withVariables)",
        "order": 17690,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Specifies if variables are populated from the historical values.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Incident priority in update number 5 was 2\nIncident priority in update number 4 was 4\nIncident priority in update number 3 was 4\nIncident priority in update number 2 was 4\nIncident priority in update number 1 was 4\nIncident priority in update number 0 was 4",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.walkTo(incGr.sys_mod_count);\ndo {\n    var oldPriority = hw.getWalkedRecord().priority;\n    gs.info('Incident priority in update number ' + hw.getUpdateNumber() + ' was ' + oldPriority);\n} while (hw.walkBackward())\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Boolean",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Returns true if walking to the specified update number was possible. Else,\n                returns false, for example if already walked to the update number 0.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-walkBackward",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "walkBackward()",
        "order": 18890,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Applies the appropriate history/audit data to get a walked GlideRecord to the state\n    when it was one update number backward. If the previous update count is missing from the\n    history/audit data, it will walk to the previous available update count.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Incident priority in update number 0 was 4\nIncident priority in update number 1 was 4\nIncident priority in update number 2 was 4\nIncident priority in update number 3 was 4\nIncident priority in update number 4 was 4\nIncident priority in update number 5 was 2",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nhw.walkTo(0);\ndo {\n    var oldPriority = hw.getWalkedRecord().priority;\n    gs.info('Incident priority in update number ' + hw.getUpdateNumber() + ' was ' + oldPriority);\n} while (hw.walkForward())\n</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Boolean",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "Returns true if walking to the specified update number was possible. Else,\n                returns false, for example if already walked to the GlideRecord update\n                count.",
            "text2": null,
            "type": "Return",
            "variable": null
          }
        ],
        "dc_identifier": "HW-walkForward",
        "hasExample": true,
        "hasOutput": true,
        "hasReturn": true,
        "name": "walkForward()",
        "order": 18900,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Applies the appropriate history/audit data to get a walked GlideRecord to the state\n    when it was one update number forward. If next update count is missing from the history/audit\n    data, it will walk to the next available update count.",
        "text2": null,
        "type": "Method",
        "variable": null
      },
      {
        "children": [
          {
            "children": [
              {
                "children": null,
                "dc_identifier": null,
                "name": "Output",
                "order": 10,
                "release": "tokyo",
                "sectionHeader": null,
                "sectionTitle": null,
                "tableHeader": null,
                "text": "Incident priority in update number 3 was 4",
                "text2": null,
                "type": "Output",
                "variable": null
              }
            ],
            "dc_identifier": null,
            "name": "Example",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": null,
            "sectionTitle": null,
            "tableHeader": null,
            "text": "<code>var incGr = new GlideRecord('incident');\nincGr.get('number', 'INC0000015');\n\nvar hw = new sn_hw.HistoryWalker(incGr.getTableName(), incGr.getUniqueValue());\nif (hw.walkTo(3)) {\n    var oldPriority = hw.getWalkedRecord().priority;\n    gs.info('Incident priority in update number ' + hw.getUpdateNumber() + ' was ' + oldPriority);\n} else\n    gs.info('Incident does not have update number 3');</code>",
            "text2": null,
            "type": "Example",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "Boolean",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Returns",
            "sectionTitle": null,
            "tableHeader": "Type,Description",
            "text": "true if walking to the specified update number was possible, false otherwise,\n                for example if the requested update is greater than the update count of the\n                GlideRecord, or if there is no history/audit data of the requested update\n                number",
            "text2": null,
            "type": "Return",
            "variable": null
          },
          {
            "children": null,
            "dc_identifier": null,
            "name": "updateCount",
            "order": 10,
            "release": "tokyo",
            "sectionHeader": "Parameters",
            "sectionTitle": null,
            "tableHeader": "Name,Type,Description",
            "text": "Integer",
            "text2": "The update number to walk to.",
            "type": "Parameter",
            "variable": null
          }
        ],
        "dc_identifier": "HW-walkTo_B",
        "hasExample": true,
        "hasOutput": true,
        "hasParameter": true,
        "hasReturn": true,
        "name": "walkTo(int updateCount)",
        "order": 18910,
        "parentId": "c_HistoryWalkerScopedGlobal",
        "parent_permalink": "class_namespace__scoped_historywalker___scoped__global_sn_hw__tokyo",
        "release": "tokyo",
        "sectionHeader": null,
        "sectionTitle": null,
        "tableHeader": null,
        "text": "Applies the appropriate history/audit data to get a GlideRecord to the state it was in\n    a specific update count. Use getWalkedRecord() or getWalkedRecordCopy() after walking to an\n    update number to retrieve the “walked” GlideRecord.",
        "text2": null,
        "type": "Method",
        "variable": null
      }
    ],
    "dc_identifier": "c_HistoryWalkerScopedGlobal",
    "is_current": true,
    "is_highlighted": true,
    "level": "Class",
    "name": "HistoryWalker - Scoped, Global",
    "namespace_id": "sn_hw-namespace",
    "release": "tokyo",
    "text": "The <span class=\"keyword apiname\">HistoryWalker</span> API uses the audit/history tables to generate a\n    historical version of an existing record.",
    "text2": "It supports the ability to return a GlideRecord to a previous update count (walked\n      GlideRecord) with the appropriate GlideElements populated. After the walked GlideRecord is\n      retrieved, the API provides the ability to move forward and backward the update numbers\n      navigating through its historical updates.<br/><br/>To use this class in scoped and global applications, use the <span class=\"keyword parmname\">sn_hw</span>\n      namespace identifier. The History Walker plugin (com.glide.history_walker) that is enabled by\n      default is required to access the <span class=\"keyword apiname\">HistoryWalker</span> API.<div class=\"note note\"><span class=\"notetitle\">Note:</span> For offline\n        updates, the <span class=\"keyword apiname\">HistoryWalker</span> API is initiated automatically and the only\n        two methods that you can use are: <span class=\"keyword apiname\">walkTo()</span> (the input argument for this\n        method can only be zero) and <span class=\"keyword apiname\">walkForward()</span>. Other available methods\n        cannot be invoked for offline updates.</div><br/><br/>The <span class=\"keyword apiname\">HistoryWalker</span> API provides two ways to retrieve the audit data:<ul class=\"ul\" id=\"c_HistoryWalkerScopedGlobal__ul_frp_f3t_qbb\">\n        <li class=\"li\">Using History Set: A History Set entry is created (if not available or not up to date)\n          from the data in the Sys Audit [sys_audit] table for the record that you are going to walk\n          through. The History Set table contains records (History Lines) with the actual changes to\n          field values that occurred. Methods of the <span class=\"keyword apiname\">HistoryWalker</span> API retrieve\n          the history data from the generated History Lines, instead of querying the sys_audit\n          table.</li>\n\n        <li class=\"li\">Using Sys Audit table: In this case, the <span class=\"keyword apiname\">HistoryWalker</span> API extracts\n          data directly querying the sys_audit table.</li>\n\n      </ul><br/><br/>By default, it populates the data to support the <span class=\"keyword apiname\">changes()</span>,\n        <span class=\"keyword apiname\">changesFrom()</span>, and <span class=\"keyword apiname\">changesTo()</span> methods in the walked\n      record, as well as provides record and field level security. Additionally, it can enable\n      journal fields and variables to be also populated in the walked GlideRecord when walking\n      through the updates.<br/><br/>This API enables you to:<br/><br/><li class=\"li\">Apply the appropriate history/audit data to get an existing GlideRecord to the state it\n        was in a specific update count.</li>\n\n      <li class=\"li\">Instruct the <span class=\"keyword apiname\">HistoryWalker</span> API to use sys_audit table instead of\n        sys_history_set/sys_history_line tables to retrieve its data.</li>\n\n      <li class=\"li\">Turn off row-level access control.</li>\n\n      <li class=\"li\">Turn off field-level access control.</li>\n\n      <li class=\"li\">Turn off retrieval and processing of “changes” data.</li>\n\n      <li class=\"li\">Enable journal fields.</li>\n\n      <li class=\"li\">Enable variables.</li>",
    "type": "Server Side Scoped",
    "variable": ""
  }
]